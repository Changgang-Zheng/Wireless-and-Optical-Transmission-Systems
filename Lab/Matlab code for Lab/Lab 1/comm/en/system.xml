<?xml version="1.0"?>
<!-- Copyright 2011-2014 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="comm">
  <message>
    <entry key="outDataTypeNotFixpt">The {0}output data type must be fixed point with power-of-two slope and zero bias.</entry>
    <entry key="fixptWordLenGT32">Fixed-point inputs with word lengths greater than 32 bits are not supported.</entry>
    <entry key="intgratPeriodWrong">The IntegrationPeriod property value must be a positive, real, integer scalar greater than one.</entry>
    <entry key="offsetWrongSgnOrDim">The OffsetSamples property value must be a non-negative integer scalar or vector.</entry>
    <entry key="intPeriodMismatch">The number of input rows must be an integer multiple of the integration period.</entry>
    <entry key="dimPropFailed">Port dimension propagation failed.</entry>
    <entry key="multRateInTrigNotAllow">Multirate operation is not allowed within triggered systems.</entry>
    <entry key="offsetWrongLenOrDim">The OffsetSamples property value must be a scalar or a vector with length equal to the number of input columns.</entry>
    <entry key="offsetNotScalar">For scalar inputs, the OffsetSamples property value must be a scalar.</entry>
    <entry key="inOrOutDimsWrong">Invalid dimensions are specified for the input or output.</entry>
    <entry key="resetNotBolOrDbl">The reset input must be a logical or double scalar.</entry>
    <entry key="dataInOutTypesDiffer">The data input and output data types must be the same.</entry>
    <entry key="outFracLenNotInt">The fraction length of the CustomOutputDataType property must be an integer.</entry>
    <entry key="outWdLenNotIntGE2">The word length of the CustomOutputDataType property must be an integer greater than or equal to two.</entry>
    <entry key="multRateNotSupTrigSubSys">Multirate processing is not supported inside triggered subsystems.</entry>
    <entry key="inputNotOneOrZero">Input values must be binary (0 or 1).</entry>
    <entry key="inputIntRangeNot0ToMm1">Input must be an integer between 0 and ModulationOrder-1.</entry>
    <entry key="sampTimesNotDiscWhenSnr">When the NoiseMethod property is set to 'Signal to noise ratio', the input and output must have discrete sample times.</entry>
    <entry key="trigSampTimesNotSupSnr">Triggered sample times are not supported when the 'Mode' parameter is set to 'Signal to noise ratio (Eb/No)' or 'Signal to noise ratio (Es/No)'.</entry>
    <entry key="inSigPowWrongDim">The SignalPower property must be a scalar or a vector with a length equal to the number of channels of the input.</entry>
    <entry key="ebEsSNRWrongDim">The EbNo, EsNo, or SNR properties must be a scalar or a vector with a length equal to the number of channels of the input.</entry>
    <entry key="bitsPerSymWrongDim">The BitsPerSymbol property must be a scalar or a vector with a length equal to the number of channels of the input.</entry>
    <entry key="symPeriodWrongDim">The SamplesPerSymbol property must be a scalar or a vector with a length equal to the number of channels of the input.</entry>
    <entry key="varWrongDim">The Variance property must be a scalar or a vector with a length equal to the number of channels of the input.</entry>
    <entry key="symPeriodSampTimeMismatch">The SymbolPeriod property must be greater than the inherited sample time of the System object.</entry>
    <entry key="inOutComplexitiesDiff">The input and output must have the same complexity.</entry>
    <entry key="dataNoiseComplexitiesDiff">The data, X, and noise, NOISE, inputs must have the same complexity</entry>
    <entry key="sampBasedInputsMatrix">Sample-based inputs cannot be a matrix.</entry>
    <entry key="dataNoiseTypesDiffer">The data, X, and noise, NOISE, inputs must have the same data type.</entry>
    <entry key="dataVarTypesDiffer">The data, X, and variance, VAR, inputs must have the same data type.</entry>
    <entry key="noiseInOutTypesDiffer">The noise input, NOISE, and the output must have the same data type.</entry>
    <entry key="varInOutTypesDiffer">The variance input, VAR, and the output must have the same data type.</entry>
    <entry key="inputNotBinaryValue">Input values must be binary (0 or 1).</entry>
    <entry key="inputNotIntegerValue">The input must have integer values.</entry>
    <entry key="inputNotLenPrimPoly">Input values must be between 0 and 2^M-1, where M is the order of the primitive polynomial.</entry>
    <entry key="erasuresNotBinaryValue">The Erasures input must have a binary value (0 or 1).</entry>
    <entry key="erasuresWrongNumber">The sum of the number of erasures and punctures cannot exceed twice the error correcting capability of the code.</entry>
    <entry key="numDelaysWrongTrellisTerm">For trellis termination, the total number of delays for all k input bit streams must be an integer multiple of k.</entry>
    <entry key="outWidthTimesCodeRateWrong">The output width times the code rate must be greater than the total number of delays in the encoder.</entry>
    <entry key="inputDataTypeNotFltBoolIntSingleUfix1">The input data type must be floating point, logical, integer or fi(data,false,1) (unsigned integer of word length 1)</entry>
    <entry key="inDataTypeNotDblInt32">The initial {0} input, INITSTATE, data type must be double precision or uint32</entry>
    <entry key="outputDataTypeNotFltBoolIntSingleUfix1">The output data type must be floating point, boolean, integer or fi(v,false,1,0) (unsigned fixed point of word length 1)</entry>
    <entry key="maryNotIntPowTwoNonZero">The ModulationOrder property must be a positive, real, integer scalar that is a nonzero power of two.</entry>
    <entry key="modIndexNotRealNonNeg">The ModulationIndex property must be a real, nonnegative scalar or column vector.</entry>
    <entry key="mainLobDurNotPosRealIntScl">The MainLobeDuration property must be a positive, real, integer scalar.</entry>
    <entry key="rolloffNotRealSclBinaryVal">The RollOffFactor parameter must be a real scalar between 0 and 1, inclusive.</entry>
    <entry key="btProdNotPosRealScl">The BandwidthTimeProduct property must be a positive, real scalar.</entry>
    <entry key="pulsLenNotPosRealIntScl">The PulseLength property must be a positive, real, integer scalar.</entry>
    <entry key="phsOffNotRealScl">The InitialPhase property must be a real scalar.</entry>
    <entry key="sampPerSymNotPosRealIntScl">The SamplesPerSymbol property must be a positive, real, integer scalar.</entry>
    <entry key="symPrehisLengthValuesErr">The SymbolPrehistory property must be a real integer scalar or vector of length one less than the pulse length.  The property values must be odd integers between -(M-1) and M-1 inclusive.</entry>
    <entry key="tracebkNotPosRealIntScl">The TracebackDepth property must be a positive, real, integer scalar.</entry>
    <entry key="modIndexNumNotPosRealIntScl">The ModulationIndex property numerator must be a positive, real, integer scalar.</entry>
    <entry key="modIndexDenNotPosRealIntScl">The ModulationIndex property denominator must be a positive, real, integer scalar.</entry>
    <entry key="outDataTypeNotDblBoolTypBit">When the BitOutput property is set to true, OutputDataType must be double or logical.</entry>
    <entry key="outDataTypeBoolWhenInt">When the BitOutput property is set to false, OutputDataType cannot be logical.</entry>
    <entry key="inputNotBinaryWhenBit">When the BitInput property is set to true, the input must be scalars or vectors containing only the values 0 or 1.</entry>
    <entry key="inputRangeErrWhenInt">When the BitInput property is set to false, inputs must be in the range +/- (ModulationOrder-2p-1), p=0,1, ..., (ModulationOrder/2)-1.</entry>
    <entry key="symPreHistNotMultNumSymb">The length of the SymbolPrehistory property must be a multiple of the number of input symbols.</entry>
    <entry key="inputWrongTypeWhenBit">When the BitInput property is set to true, inputs must have be double or logical.</entry>
    <entry key="inputWrongTypeWhenInt">When the BitInput property is set to false, inputs must be double-precision or signed integer data type.</entry>
    <entry key="outMsgBlkLenWrongLen">The output message block length must be greater than the degree of the generator polynomial.</entry>
    <entry key="inMsgBlkLenWrongLen">The input message block length must be greater than the degree of the generator polynomial.</entry>
    <entry key="inDataTypeNotFloatBoolIntWhenInt">When the BitInput property is set to false, the input must have a single-precision, double-precision, logical, or integer data type.</entry>
    <entry key="inDataTypeNotFloatIntWhenInt">When the BitInput property is set to false, the input must have a single-precision, double-precision, or integer data type.</entry>
    <entry key="inDataTypeNotFloatBoolIntWhenBit">When the BitInput property is set to true, the input must have a single-precision, double-precision, logical, or integer data type.</entry>
    <entry key="initCondNotSclVecOrDimWrong">The InitialConditions property must either be a finite-valued scalar, or a vector with the same dimensions as the Delay property.</entry>
    <entry key="noiseVarNotRealPosScl">The Variance property must be a real, positive scalar.</entry>
    <entry key="bitsPerIntWrongVal">The BitsPerInteger property must be a positive integer scalar less than or equal to 32.</entry>
    <entry key="inputUnsgnIntsWrongRange">Inputs must be integers in the range 0 to (2^(BitsPerInteger) - 1).  To use signed integer inputs, set the SignedIntegerInput property to true.</entry>
    <entry key="inputSgnIntsWrongRange">Inputs must be integers in the range -(2^(BitsPerInteger-1)) to (2^(BitsPerInteger-1) - 1). To use unsigned integer inputs, set the SignedIntegerInput parameter to false.</entry>
    <entry key="inNotColVecLenWrong">Inputs must be a column vector with a length equal to an integer multiple of the BitsPerInteger property.</entry>
    <entry key="outNotSclOrNumBitsNotInWdth">For sample-based inputs, the output must be scalar and the 'Number of bits per integer' parameter must match the input width.</entry>
    <entry key="sampPerFrameNotPosInt">The SamplesPerFrame property must be a positive integer.</entry>
    <entry key="resetOutputSampTimesDiffer">The sample time of the reset input, RESET, must be equal to the sample time of the output.</entry>
    <entry key="resetNotSclOrColVec">The reset input, R, must be a scalar or a column vector.</entry>
    <entry key="resetWrongWidth">The number of rows of the reset input, R, must be equal to value of the SamplesPerFrame property.</entry>
    <entry key="numPackBitsWrongTypeOrSz">The NumPackedBits property must be a positive integer less than or equal to 32.</entry>
    <entry key="resetWrongDim">The reset input, RESET, must be scalar or a column vector with length equal to the SamplesPerFrame property.</entry>
    <entry key="maskInLenNotPolyOrder">The mask input, MASK, must be a vector with a length equal to the polynomial order.</entry>
    <entry key="iniStNotSclOrVec">The initial conditions input, INITCOND, must be scalar or a vector with a length equal to the polynomial order.</entry>
    <entry key="maskSmpTmNotEqlOutSmpTm">The sample time of the mask input, MASK, must be equal to the sample time of the output.</entry>
    <entry key="outSmpTmNotSmpTmSetting">The sample time of the output must be equal to the 'Sample time' parameter.</entry>
    <entry key="maskInDataTypewrong">The mask input, MASK, must be a uint8, unsigned fixed point number with word length 1 (fi object), or double-precision data type.</entry>
    <entry key="iniStInDataTypeWrong">The initial conditions input, INITCOND, must be a uint8, unsigned fixed point number with word length 1 (fi object), or double-precision data type.</entry>   
    <entry key="initStInpNotBinaryValued">The initial conditions input, INITCOND, must have a binary value (0 or 1).</entry>    
    <entry key="sgnFixptInNotSupportMary">Signed fixed-point input data types are only supported when the ModulationOrder property is 2, 4, or 8.</entry>
    <entry key="inDataTypeWrongWhenSoft">The input must have a single-precision or double-precision data type when the DecisionMethod property is set to 'Log-likelihood ratio' or 'Approximate log-likelihood ratio'.</entry>
    <entry key="denormFactorWordLenWrong">The CustomDenormalizationFactorDataType word length must be less than or equal to 64.</entry>
    <entry key="outWordLenGT32">The output word length must be less than or equal to 32.</entry>
    <entry key="calcBaseNot2">The CalculationBase property must be set to 2 when the input has a logical data type.</entry>
    <entry key="opModeNotContinuous">For single symbol inputs, set the TerminationMethod property to 'Continuous' when you want to specify a value greater than 1 for the TracebackDepth property.</entry>
    <entry key="tracebackNotLENumSymb">The TracebackDepth property must be less than or equal to the number of symbols in the input.</entry>
    <entry key="fltOutFixptInNotSupported">Floating-point outputs are not supported for fixed-point inputs. Change the input data type, or select a different OutputDataType setting.</entry>
    <entry key="inputNotIntFracLenZero">The input must be an integer with a fraction length of zero.</entry>
    <entry key="inDataTypeNotUFixpt">Fixed-point inputs must be unsigned with a slope of one and zero bias.</entry>
    <entry key="inWrongTypeWhenUnquant">When the InputFormat property is set to 'Unquantized,' the input values must be single-precision or double-precision.</entry>
    <entry key="inWrongTypeWhenHardDecs">When the InputFormat property is set to 'Hard decision,' the input values must be logical, single-precision, double-precision, or fixed-point integers.</entry>
    <entry key="inputWdLenNotOne">The word length of the input must be 1.</entry>
    <entry key="inWrongTypeWhenSoftDecs">When the InputFormat property is set to 'Soft decision,' the input values must be single-precision, double-precision, or fixed-point integers.</entry>
    <entry key="inWrongSzWhenSoftDecs">When the InputFormat property is set to 'Soft decision,' the word length of the input must equal the SoftInputWordLength property.</entry>
    <entry key="outWrongTypeWhenUnquant">When the InputFormat property is set to 'Unquantized,' the output must have a single-precision or double-precision data type.</entry>
    <entry key="outDataTypeUnsuppHrwd">The output data type must be the smallest unsigned integer supported by your hardware configuration.</entry>
    <entry key="phaseOffNotRealScl">The PhaseOffset property must be a finite, real scalar.</entry>
    <entry key="outDataTypeNotFloatUIntUFixpt">The output must have a single-precision, double-precision, uint8, uint16, uint32, or fi(v,false,n,0) (unsigned fixed point of word length n) data type.</entry>
    <entry key="outWordLenTooSmall">The output word length is not large enough for the full possible range of output values.</entry>
    <entry key="outFixPtLenGT32NotSupport">Fixed-point outputs with word lengths greater than 32 bits are not supported.</entry>
    <entry key="sigConstelWdLenWrong">The CustomSignalConstellationDataType property word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="acc1WdLenWrong">The CustomAccumulator1DataType property word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="prodInWdLenWrong">The CustomProductInputDataType property word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="prodOutWdLenWrong">The CustomProductOutputDataType property word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="acc2WdLenWrong">The CustomAccumulator2DataType property word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="acc3WdLenWrong">The CustomAccumulator3DataType property word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="noiseScaleLenWrong">The CustomNoiseScalingInputDataType property word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="invNoiseVarLenWrong">The CustomInverseVarianceDataType property word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="outWdLenWrong">The CustomOutputDataType property word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="resetWrongValue">For scalar inputs, the ResetCondition property must be set to 'Never' or the ResetInputPort property must be set to true.</entry>
    <entry key="inLenNotMultSmpsSymb">The input vector length must be an integer multiple of the SamplesPerSymbol property.</entry>
    <entry key="unsgnWordLenGT32">Unsigned integer or fixed-point input data types must have word lengths less than or equal to 32.</entry>
    <entry key="inOutDimWrongMsgCdWrd">The input and output dimensions must be consistent with the message or codeword length, including the effects of possible puncturing.</entry>
    <entry key="initStatesGenPolyMismatch">The InitialConditions property must be a binary scalar or vector of length equal to the degree of the generator polynomial defined in the Polynomial property.</entry>
    <entry key="outMaskGenPolyMismatch">The Mask property must be a real non-negative integer, or a binary vector with a length equal to the degree of the generator polynomial defined in the Polynomial property.</entry>
    <entry key="inValsWrongForDecide">When the InputFormat property is set to 'Hard decision,' input values must be 0 or 1. When the InputFormat property is set to 'Soft decision,' input values must be integers in the range 0 to (2^N)-1, where N is the SoftInputWordLength.</entry>
    <entry key="inOutNotBothFixptEmbed">When you set the OutputDataType property to 'Smallest unsigned integer' and the InputFormat property to 'Hard', the object accepts an input signal with a ufix(1) data type. When you set the InputFormat property to 'Soft', the object accepts an input signal with an unsigned fixed-point data type and a word length equal to the SoftInputWordLength property value. 'Unquantized' is not a valid selection for the InputFormat property.</entry>
    <entry key="fltOutNonFltInNotSupport">Floating-point output data types are not supported when the input is not a floating-point data type. Change the OutputDataType property to a non-floating-point data type.</entry>
    <entry key="inDataTypeNotFloatSFixpt">The input data type must be floating point or signed fixed point with unit slope and zero bias.</entry>
    <entry key="inDataTypeNotFloatUFixpt">The input data type must be floating point or unsigned fixed point with unit slope and zero bias.</entry>
    <entry key="outDataTypeNotFloatUFixpt">The output data type must be floating point or unsigned fixed point with unit slope and zero bias.</entry>
    <entry key="dtTrueSinglesNotSupported">This System object does not support the 'Single' mode of the 'Data type override' parameter on the Fixed-Point Tool. Change the 'Data Type Override' setting.</entry>
    <entry key="inputsWrongTypeWhenBit">When the BitInput property is set to true, inputs must have a single-precision, double-precision, logical, integer, or fi(v,false,1,0) (unsigned fixed point of word length 1) data type.</entry>
    <entry key="outDataTypeNotFloatSFixpt">The output must be a single-precision, double-precision, or signed fixed point data type with a slope of one and zero bias.</entry>
    <entry key="inputFixptNotIntUFix1">Fixed-point inputs must be an integer or fi(v,false,1,0) (unsigned fixed point of word length 1).</entry>
    <entry key="fixptNotSupIfHardEvenPow2">Fixed-point input data types are only supported when the DecisionMethod property is set to 'Hard decision' and the ModulationOrder property is an even power of two.</entry>
    <entry key="maryWrongTypeOrVal">The ModulationOrder property must be a positive integer scalar greater than or equal to two.</entry>
    <entry key="inputsWrongTypeBinMod">When using binary modulation, inputs must have a single-precision, double-precision, logical, integer, or unsigned fixed point with word length 1 data type.</entry>
    <entry key="inputsWrongTypeNonBinMod">When using nonbinary modulation with a signal constellation containing M elements, inputs must have a single-precision, double-precision, integer, or unsigned fixed point with word length ceil(log2(ModulationOrder)) data type.</entry>
    <entry key="puncVecWrongTypeOrVals">The PuncturePattern property must be a vector of double-precision one and zero values.</entry>
    <entry key="insZerVecWrongTypeOrVals">The InsertZeroVector property must be a vector of double-precision one and zero values.</entry>
    <entry key="elemNotColVec">Property must be a column vector.</entry>
    <entry key="puncVecAllZeros">The PuncturePattern property must have at least one nonzero element.</entry>
    <entry key="insZerVecAllZeros">The InsertZerosVector property must have at least one nonzero element.</entry>
    <entry key="inLenNotMultPuncVec">The input length must be an integer multiple of the PuncturePattern property length.</entry>
    <entry key="inLenNotMultInsZer">The input length must be an integer multiple of the number of ones in the InsertZeroVector property.</entry>
    <entry key="outLenNotMultOnes">The output length must be an integer multiple of the number of ones in the PuncturePattern property.</entry>
    <entry key="outLenNotMultInsZerLen">The output length must be an integer multiple of the InsertZeroVector property length.</entry>
    <entry key="bitOutMNotPow2">When the BitOutput property is set to true, the ModulationOrder property must be a positive integer power of two.</entry>
    <entry key="bitInMNotPow2">When the BitInput property is set to true, the ModulationOrder property must be a positive integer power of two.</entry>
    <entry key="grayMNotPow2">When the SymbolMapping property is set to 'Gray', the ModulationOrder property must be a positive integer power of two.</entry>
    <entry key="inputNot1D2DColVec">The input must be a column vector.</entry>
    <entry key="outputNot1D2DColVec">The output must be a column vector.</entry>
    <entry key="bitInVecInWrongLen">When the BitInput property is set to 'Bit', the length of the input must be an integer multiple of the number of bits per symbol.</entry>
    <entry key="bitOutVecOutWrongLen">When the BitOutput property is set to 'Bit', the length of the output must be an integer multiple of the number of bits per symbol.</entry>
    <entry key="outWrdLenTooSmallForRange">The CustomOutputDataType property word length is not large enough to cover the range of possible output values. An unsigned word length must be at least {0, number, integer} and a signed word length must be at least {1, number, integer}.</entry>
    <entry key="outNotIntScalar">The output data type must be an integer scalar.</entry>
    <entry key="inNotInRange1To3">The input must be an integer from 0 to 3.</entry>
    <entry key="dimTrellisNotConsistent">The input dimensions must be consistent with the data in the trellis structure.</entry>
    <entry key="inDataTypeWrongForInt">When the BitInput property is set to false, the input must have a fi(v,false,2,0) (unsigned fixed point of word length 2), integer, or floating-point data type.</entry>
    <entry key="inDataTypeWrongForBit">When the BitInput property is set to true, the input must have a fi(v,false,1,0) (unsigned fixed point of word length 1), logical, integer, or floating-point data type.</entry>
    <entry key="maryNotEvenGE2">The ModulationOrder property must be an even number greater than or equal to two.</entry>
    <entry key="inputsWrongTypeMary2">When the ModulationOrder property is two and the BitInput property is set to false, inputs must have a single-precision, double-precision, logical, integer, or fi(v,false,1,0) (unsigned fixed point of word length 1) data type.</entry>
    <entry key="inputsWrongTypeMaryGT2">When the ModulationOrder property is greater than two and the BitInput property is set to false, inputs must have a single-precision, double-precision, integer, or fi(v,false,ceil(log2(ModulationOrder)),0) (unsigned fixed point of word length ceil(log2(ModulationOrder))) data type.</entry>
    <entry key="modTypeInvalid">The value entered for the 'Modulation Type' property is invalid.</entry>
    <entry key="inNotColVecEvenLen">The input must be an even length vector.</entry>
    <entry key="bitOutNotColVecEvenLen">When the BitInput property is set to true, the output must be an even length vector.</entry>
    <entry key="outNotColVecLen2">In multirate processing mode, when the BitInput property is set to true, the output must be a column vector of length 2. The System object is in multirate processing mode when the 'Rate options' parameter is set to 'Allow multirate processing', or for sample-based inputs, is set to 'Inherit from input (this choice will be removed - see release notes) '</entry>
    <entry key="accWdLenNot2To128">The CustomAccumulatorDataType property word length must be an integer from 2 to 128.</entry>
    <entry key="targNumErrorsWrongValue">The 'Target number of errors' parameter must either be a positive integer or Inf.</entry>
    <entry key="maxNumSymWrongValue">The 'Maximum number of symbols' parameter must either be a positive integer or Inf.</entry>
    <entry key="txRxLengthsDiffer">The Tx and Rx inputs must have the same length.</entry>
    <entry key="permVecWrongTypeOrDim">Invalid permutation vector type or dimension.</entry>
    <entry key="prodOutWdLenGT128">The CustomProductDataType word length must be less than or equal to 128.</entry>
    <entry key="numElementsMismatch">The number of elements in the input and output signals must match the length of the PermutationVector property.</entry>
    <entry key="fixedPtNotSupDecisType">Fixed-point input data types are only supported when the DecisionMethod property is set to 'Hard decision' or 'Approximate Log-likelihood ratio'.</entry>
    <entry key="puncVecNotColVec">The PuncturePattern property must be a column vector.</entry>
    <entry key="inDimNotConsistentTrellisInEncd">The input dimensions must be consistent with the data in the trellis structure. The input length must be an integer multiple of the number of input bit streams (k=log2(numInputSymbols)) to the encoder.</entry>
    <entry key="outDimNotConsistentTrellisOutEncd">The port dimensions must be consistent with the data in the trellis structure. The output length must be an integer multiple of the number of output bit streams (n=log2(numOutputSymbols)) from the encoder.</entry>
    <entry key="inWdthNotMultOnesPuncVec">The input length must be a multiple of the number of ones in the PuncturePattern property.</entry>
    <entry key="inDimNotConsistentTrellisInDecd">The input dimensions must be consistent with the data in the trellis structure. The input length must be an integer multiple of the number of input bit streams to the decoder (n=log2(numOutputSymbols)).</entry>
    <entry key="outDimNotConsistentTrellisOutDecd">The output dimensions must be consistent with the data in the trellis structure. The output length must be an integer multiple of the number of output bit streams of the decoder (k=log2(numInputSymbols)).</entry>
    <entry key="inDimNotConsistentTrellisOutDecd">The input dimensions must be consistent with the data in the trellis structure. The input length must be an integer multiple of the number of output bit streams of the decoder (k=log2(numInputSymbols)).</entry>
    <entry key="outDimNotConsistentTrellisInDecd">The output dimensions must be consistent with the data in the trellis structure. The output length must be an integer multiple of the number of input bit streams to the decoder (n=log2(numOutputSymbols)).</entry>
    <entry key="resetSampTimeNotOutSampTime">The reset input, R, sample time must be the same as the output sample time.</entry>
    <entry key="resetInSampTimeMismatch">The input data and reset inputs must have the same sample time.</entry>
    <entry key="resetSampTimeNotSymbPer">The reset input, R, sample time must be the same as the symbol period.</entry>
    <entry key="inOutSampNotDerepeat">The output frame length must equal the input frame length divided by the value of the 'Derepeat factor' parameter.</entry>
    <entry key="inOutSampsDiffer">The output frame length must equal the input frame length.</entry>
    <entry key="sampsElemExceedInWidth">The elements of the Samples property must be smaller than or equal to the input length.</entry>
    <entry key="sampsWidthExceedInWidth">Samples to consider input, SEL, values must be non-negative integers less than or equal to the number of rows of the input.</entry>
    <entry key="resetDatatTypeWrong">The reset input, Rst, must have a double-precision or  logical data type.</entry>
    <entry key="workSpaceError">An internal error occurred while attempting to write the output data to the workspace.</entry>
    <entry key="workSpaceTransferError">An internal error occurred while attempting to write the transfer matrix to the requested workspace.</entry>
    <entry key="phaseFreqMatDimsDiffer">The PhaseOffset and FrequencyOffset properties must have the same dimensions.</entry>
    <entry key="phaseFreqVecLensDiffer">The PhaseOffset and FrequencyOffset properties must have the same length.</entry>
    <entry key="phaseFreqOffsetNotScalar">The PhaseOffset and FrequencyOffset properties must both be scalar when the input is scalar.</entry>
    <entry key="sigConstWrongSize">The Constellation property must be a vector of at least two elements that represents the set of expected constellation points.</entry>
    <entry key="preambleWrong">The Preamble property must be a vector of integers between 0 and (the order of the constellation - 1).</entry>
    <entry key="postambleWrong">The Postamble property must be a vector of integers between 0 and (the order of the constellation - 1).</entry>
    <entry key="trellisStatesTooBig">The property settings describe a trellis with more than 2^20 states. This is causing a memory allocation failure.</entry>
    <entry key="lenDataNotMultSampsPerSym">The number of rows of the input must be an integer multiple of the SamplesPerSymbol property.</entry>
    <entry key="tracebackDepthWrong">The sum of the TracebackDepth property and the length of Preamble property, multiplied by the SamplesPerSymbol property must be less than or equal to the number of rows of the input.</entry>
    <entry key="lenChanNotMultSampsPerSym">The number of rows of the input must be an integer multiple of the SamplesPerSymbol property.</entry>
    <entry key="inChanOutTypesDiffer">The channel input, CHANNEL, and output data types must be the same.</entry>
    <entry key="freqOffDimsWrong">The number of rows and/or columns in the frequency offset input, FREQ, must either be 1 or the same as the data input, X.</entry>
    <entry key="phaseOffDimsWrong">The number of rows and/or columns of the PhaseOffset property must either be 1 or the same as the data input, X.</entry>
    <entry key="freqOffDimsWrongP">The number of rows and/or columns of the FrequencyOffset property must either be 1 or the same as the data input, X.</entry>
    <entry key="freqOffElemNumWrong">The number of elements of the frequency offset input, FRQ, must either be 1 or the same as the number of columns of the data input, X.</entry>
    <entry key="phaseOffElemNumWrong">The number of elements in the PhaseOffset property must either be 1 or the same as the number of columns of the data input, X.</entry>
    <entry key="freqOffElemNumWrongP">The number of elements in the FrequencyOffset property must either be 1 or the same as the number of columns of the data input, X.</entry>
    <entry key="freqOffElemSzWrong">The number of elements in the frequency offset input, FRQ, must either be 1 or the same as the number of rows of the data input, X.</entry>
    <entry key="phaseOffElemSzWrongP">The number of elements in the PhaseOffset property must either be 1 or the same as the number of rows of the data input, X.</entry>
    <entry key="freqOffElemSzWrongP">The number of elements in the FrequencyOffset property must either be 1 or the same as the number of rows of the data input, X.</entry>
    <entry key="freqOffElemRwColWrong">The number of elements in the frequency offset input, FRQ, must either be 1 or the same as the number of rows or columns in the data input, X.</entry>
    <entry key="phaseOffElemRwColWrongP">The number of elements in the PhaseOffset property must either be 1 or the same as the number of rows or columns in the data input, X.</entry>
    <entry key="freqOffElemRwColWrongP">The number of elements in the FrequencyOffset property must either be 1 or the same as the number of rows or columns in the data input, X.</entry>
    <entry key="freqOffRowsWrong">The number of rows in the frequency offset input, FRQ, must either be 1 or the same as the data input, X.</entry>
    <entry key="phaseOffRowsWrongP">The number of rows in the PhaseOffset property must either be 1 or the same as the data input, X.</entry>
    <entry key="freqOffRowsWrongP">The number of rows in the FrequencyOffset property must either be 1 or the same as the data input, X.</entry>
    <entry key="freqOffColsWrong">The number of columns in the frequency offset input, FRQ, must either be 1 or the same as the data input, X.</entry>
    <entry key="phaseOffColsWrongP">The number of columns in the PhaseOffset property must either be 1 or the same as the data input, X.</entry>
    <entry key="freqOffColsWrongP">The number of columns in the FrequencyOffset property must either be 1 or the same as the data input, X.</entry>
    <entry key="inNot1D2DColVecEvenLen">The input must be a column vector with an even number of elements.</entry>
    <entry key="outNot1D2DColVecEvenLen">The output must be a column vector with an even number of elements.</entry>
    <entry key="initStatNotRealIntSclOrBin">The InitialConditions property must be an real integer scalar or a binary vector.</entry>
    <entry key="sampTimeNotRealFinPosScl">The SampleTime property must be a real, finite, positive scalar.</entry>
    <entry key="sumWdLenGT128">The CustomSumDataType word length must be less than or equal to 128.</entry>
    <entry key="outBoolMaryNot2">When the BitOutput property is set to false, outputs can have a logical data type when the ModulationOrder property is set to 2.</entry>
    <entry key="triggSampTimeNotAllowed">Triggered sample times are not supported.</entry>
    <entry key="taskingNotSingle">For multirate processing, the tasking mode must be set to 'SingleTasking'.</entry>
    <entry key="inDataTypeNotDblBoolWhenBit">When the BitInput property is set to true, the input must have a logical or double-precision data type.</entry>
    <entry key="sigConstModeWrong">The Constellation property must be a real, double-precision integer with a value between 1 and {0, number, integer}, inclusive.</entry>
    <entry key="accOneModeWrong">The Accumulator1DataType property must be a real, double-precision integer with a value between 1 and {0, number, integer}, inclusive.</entry>
    <entry key="prodInModeWrong">The ProductInputDataType property must be a real, double-precision integer with a value between 1 and {0, number, integer}, inclusive.</entry>
    <entry key="prodOutModewrong">The ProductOutputDataType property must be a real, double-precision integer with a value between 1 and {0, number, integer}, inclusive.</entry>
    <entry key="accTwoModeWrong">The Accumulator2DataType property must be a real, double-precision integer with a value between 1 and {0, number, integer}, inclusive.</entry>
    <entry key="accThreeModeWrong">The Accumulator3DataType property must be a real, double-precision integer with a value between 1 and {0, number, integer}, inclusive.</entry>
    <entry key="noiseScalModeWrong">The NoiseScalingInput property must be a real, double-precision integer with a value between 1 and {0, number, integer}, inclusive.</entry>
    <entry key="invVarModeWrong">The InverseNoiseVariance property must be a real, double-precision integer with a value between 1 and {0, number, integer}, inclusive.</entry>
    <entry key="outModeWrong">The OutputDataType  property must be a real, double-precision integer with a value between 1 and {0, number, integer}, inclusive.</entry>
    <entry key="prodOutWdLenNot3To128">The CustomProductOutputDataType property word length must be an integer between 3 and 128, inclusive.</entry>
    <entry key="engyProdOutWdLenNot3To128">The CustomEnergyProductOutputDataType property word length must be an integer between 3 and 128, inclusive.</entry>
    <entry key="engyAccWdLenNot2To128">The CustomEnergyAccumulatorDataType property word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="divOutWdLenNot2To128">The CustomDivisionOutputDataType property word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="unknownDeviceType">Unrecognized or unhandled device type.</entry>
    <entry key="cmplxProdWordLenGT128">The CustomProductDataType property word lengths must be less than or equal to 128 bits.</entry>
    <entry key="numAntNotOneCol">The NumReceiveAntennas property value must be 1 when the input is a column vector.</entry>
    <entry key="inColsNotNumAnt">The number of input columns must be equal to the value of the NumReceiveAntennas property.</entry>
    <entry key="sigRowsNotGT1">The number of input rows must be greater than 1.</entry>
    <entry key="sigDim1NotGT1">The first dimension of the input must be greater than 1.</entry>
    <entry key="inDim3NotNumAnt">The third dimension of the input must be equal to the value of the NumReceiveAntennas property.</entry>
    <entry key="sigNot2D3D">The input must be a 2-D or 3-D matrix.</entry>
    <entry key="numAntennaNotOneMat">When the channel estimation input is a 2-D matrix, the value of the NumReceiveAntennas property must be 1.</entry>
    <entry key="chanEstColNotNumAnt">The number of columns in the channel estimation input must be equal to the value of the NumTransmitAntennas property.</entry>
    <entry key="chanEstDim2NotNumAnt">The second dimension of the channel estimation input must be equal to the value of the NumTransmitAntennas property.</entry>
    <entry key="chanEstDim3NotNumRecAnt">The third dimension of the channel estimation input must be equal to the value of the NumReceiveAntennas property.</entry>
    <entry key="chanEstDim1NotGT1">The first dimension of the channel estimation input must be greater than 1.</entry>
    <entry key="chanEstDim3NotNumTranAnt">The third dimension of the channel estimation input must be equal to the value of the NumTransmitAntennas property.</entry>
    <entry key="chanEstDim4NotNumRecAnt">The fourth dimension of the channel estimation input must be equal to the value of the NumReceiveAntennas property.</entry>
    <entry key="chanEstNot2D3D4D">The channel estimation input must be a 2-D, 3-D, or 4-D matrix.</entry>
    <entry key="outputNotColVecOrMat">The output must be a 2-D column vector or a 2-D matrix.</entry>
    <entry key="inputFltTypesDiffer">The floating-point data types of the inputs must be the same.</entry>
    <entry key="inOutFltTypesDiffer">The floating-point data types of the input and output must be the same.</entry>
    <entry key="inputNotColVecOrMat">The input must be a column vector or a matrix.</entry>
    <entry key="outColsNotNumAnt">The number of output columns must be equal to the value of the NumTransmitAntennas property.</entry>
    <entry key="outDim1NotGT1">The first dimension of the output must be greater than 1.</entry>
    <entry key="outDim3NotNumAnt">The third dimension of the output must be equal to the value of the NumTransmitAntennas property.</entry>
    <entry key="outNot2D3D">The output must be a 2-D or 3-D signal.</entry>
    <entry key="pulsWrongNumCols">The pulse shaping filter must be a polyphase matrix with a number of columns equal to the value of the SamplesPerSymbol property.</entry>
    <entry key="filtCoefLtSampsSymb">For proper operation, the number of filter coefficients should be greater than the value of the SamplesPerSymbol property. The interpolation order is (filter length)/(samples per symbol) - 1.</entry>
    <entry key="inDataTypeNotDblIntWhenInt">When the BitInput property is set to false, the input must have an integer or double-precision data type.</entry>
    <entry key="initCondWrongNum">The InitialConditions property must either be a scalar or a vector the size of the output buffer.</entry>
    <entry key="maryWrongBitOut">When the BitOutput property is set to true, the ModulationOrder property must be a real, positive, scalar integer that is a nonzero power of two.</entry>
    <entry key="varInNotRealNonNeg">The variance input, VAR, must be a real non-negative value.</entry>
    <entry key="sigInLenNotMult">The length of the signal input must be a multiple of {0, number, integer}.</entry>
    <entry key="numOutRowsNotMult">The number of output rows must be a multiple of {0, number, integer}.</entry>
    <entry key="outDim2NotMult">The second dimension of the output must be a multiple of {0, number, integer}.</entry>
    <entry key="sigInNumRowsNotMult">The number of input rows of the signal input, X, must be a multiple of {0, number, integer}.</entry>
    <entry key="sigInNumColsNotMult">The number of columns of the signal input, X, must be a multiple of {0, number, integer}.</entry>
    <entry key="inSigDim2NotMult">The second dimension of the signal input, X, must be a multiple of {0, number, integer}.</entry>
    <entry key="inChanEstRowsNotMult">The number of rows of the channel estimation input, CEST, must be a multiple of {0, number, integer}.</entry>
    <entry key="inChanEstDim1NotMult">The first dimension of the channel estimation input, CEST, must be a multiple of {0, number, integer}.</entry>
    <entry key="inChanEstDim2NotMult">The second dimension of the channel estimation input, CEST, must be a multiple of {0, number, integer}.</entry>
    <entry key="outNumColsNotMult">The number of output columns must be a multiple of {0, number, integer}.</entry>
    <entry key="inLenNotMultTrellisOutBits">The input length must be an integer multiple of the number of output bits specified in the trellis description.</entry>
    <entry key="outLenNotMultTrellisInBits">The output length must be an integer multiple of the number of input bits specified in the trellis description.</entry>
    <entry key="initStateNotLessThanInt">The value of the initial state input, INITSTATE, must be a nonnegative integer less than {0, number, integer}.</entry>
    <entry key="inLenDivCodeRtWrong">The input length divided by the code rate (prior to puncturing) must be an integer multiple of the PuncturePattern property length. Adjust the property length or the code rate. The property length is currently {0, number, integer}, and the code rate is currently {1, number, integer}/{2, number, integer}.</entry>
    <entry key="outWdDivCodeRtWrong">The output length divided by the code rate (prior to decoding) must be an integer multiple of the PuncturePattern property length. Adjust the property length or the code rate. The property length is currently {0, number, integer}, and the code rate is currently {1, number, integer}/{2, number, integer}.</entry>
    <entry key="inLenNotMultChkSum">The input length must be an integer multiple of the ChecksumsPerFrame property value.</entry>
    <entry key="out1LenNotMultChkSum">The first output length must be an integer multiple of the ChecksumsPerFrame property value.</entry>
    <entry key="out2LenNotEquChkSum">The second output length must be equal to the ChecksumsPerFrame property value.</entry>
    <entry key="outLenNotMultChkSum">The output length must be an integer multiple of the ChecksumsPerFrame property.</entry>
    <entry key="inputLengthsDiffer">The length of all inputs must be the same.</entry>
    <entry key="inputTypesDiffer">All inputs must have the same data type.</entry>
    <entry key="excessiveTrellisMemory">The trellis must have fewer than 2^16 states.</entry>
    <entry key="inputWidthNotN">Input must be a column vector of length N.</entry>
    <entry key="inputWidthNotK">Input must be a column vector of length K.</entry>
    <entry key="outputWidthNotN">Output must be a column vector of length N.</entry>
    <entry key="bitInSglRtInLenNotMultBitsSym">In single-rate processing mode, when the BitInput property is set to true, the input length must be an integer multiple of the number of bits per symbol. The System object is in single-rate processing mode when the 'Rate options' parameter is set to 'Enforce single-rate' or, for frame-based inputs, is set to 'Inherit via input (To be removed)'.</entry>
    <entry key="intInMulRtInNotScl">In multi-rate processing mode, when the 'Input type' parameter is set to 'Integer', the input must be a scalar.</entry>
    <entry key="bitInMulRtInLenNotBitsSym">In multi-rate processing mode, when the 'Input type' parameter is set to 'Bit', the input length must equal the number of bits per symbol.</entry>
    <entry key="sglRtOutLenNotMulSampSym">The output length must be an integer multiple of the SamplesPerSymbol property.</entry>
    <entry key="mulRtOutNotScl">The output must be a scalar when the 'Rate options' parameter is set to 'Allow multi-rate'.</entry>
    <entry key="sglRtInLenNotMulSampSym">The input length must be a multiple of the SamplesPerSymbol property.</entry>
    <entry key="mulRtInNotScl">The input must be a scalar when the 'Rate options' parameter is set to 'Allow multi-rate'.</entry>
    <entry key="bitOutSglRtOutLenNotMultBitsSym">When the BitOutput property is set to true, the output length must be an integer multiple of the number of bits per symbol.</entry>
    <entry key="intOutMulRtOutNotScl">In multi-rate processing mode, when the BitOutput property is set to false, the output must be a scalar.</entry>
    <entry key="bitOutMulRtOutLenNotBitsSym">In multi-rate processing mode, when the BitOutput property is set to true, the output length must equal the number of bits per symbol.</entry>
    <entry key="invInputdims">This System object accepts column vectors or matrices.</entry>
    <entry key="dumpOffInvOutDims">When the DecimateOutput property is set to false, sample-based output must be a scalar, column vector or matrix and frame-based output must be a column vector or matrix.</entry>
    <entry key="parityCheckInvalid">Internal error: Invalid parity-check matrix specified.</entry>
    <entry key="delayedResetActionInDimNotK">When the DelayedResetAction property is true for a rate K/N code, the length of the input data vector must be K.</entry>
    <entry key="delayedResetActionOutDimNotN">When the DelayedResetAction property is true for a rate K/N code, the length of the output data vector must be N.</entry>
    <entry key="sglRtOutLenNotEven">The output must be an even length vector.</entry>
    <entry key="bitInSglRtInLenNotEven">When the BitInput property is set to true, the input must be an even length vector.</entry>
    <entry key="bitInMulRtInLenNot2">In multirate processing mode, when the BitInput property is set to true', the input must be a column vector of length 2.</entry>
    <entry key="outUfix1AndNumBitsNotOutWdth">For ufix1 output, the NumBitsPerInteger property must be 1.</entry>
    <entry key="seedWrongDim">Not applicable.</entry>
    <entry key="maxOutSizeNot2ElRowVector">The MaximumOutputSize property must be a positive integer-valued two-element row vector.</entry>
    <entry key="maxOutSize2ndNot1">Multichannel outputs are not supported. The second element of the MaximumOutputSize property must be equal to 1.</entry>
    <entry key="inpSizeNotGrtMaxSize">The input value for the current output size cannot be greater than the first element of the MaximumOutputSize property.</entry>
    <entry key="currInpSize2ndNot1">Multichannel outputs are not supported. The second element of the input for the current output size must be equal to 1.</entry>
    <entry key="resetNotsclVarSized">The Reset input must be a scalar for variable-size output signals.</entry>
    <entry key="inpOSizeWrongDim">The current output size input must be a scalar or a two-element row vector.</entry>
    <entry key="oSizePortNotDbl">The current output size input must be a double-precision data type.</entry>
    <entry key="varSzNotSupErasures">Variable-size signals are not supported when the ErasuresInputPort property is set to true.</entry>
    <entry key="outputWidthNotK">Output must be a column vector of length K.</entry>
    <entry key="inNotFloatOrFixptForInherit">When you set the OutputDataType property to 'Full precision', the object accepts a floating point input signal. When you set the InputFormat property to 'Hard', the object also accepts an input signal with a ufix(1) data type. When you set the InputFormat property to 'Soft', the object also accepts an input signal with an unsigned fixed-point data type and a word length equal to the SoftInputWordLength property value.</entry>
    <entry key="notSameFirstDimSize">The first dimension for the current signal input and channel estimation input must be the same.</entry>
    <entry key="notSameSecondDimSize">The second dimension for the current signal input and channel estimation input must be the same.</entry>
    <entry key="delayedResetActionInDimNotN">When the DelayedResetAction property is true for a rate K/N code, the length of the input data vector must be N, the PuncturePatternSource property must be set to 'None', and the ErasuresInputPort property must be set to 'false'.</entry>
    <entry key="delayedResetActionOutDimNotK">When the DelayedResetAction property is true for a rate K/N code, the length of the output data vector must be K, the PuncturePatternSource property must be set to 'None', and the ErasuresInputPort property must be set to 'false'.</entry>
    <entry key="tracebackDepthGTOutRows">The sum of the TracebackDepth property and the length of Preamble property must be less than or equal to the number of rows of the output.</entry>
    <entry key="inconsistentInputWidths">The input dimensions must be consistent with the data in the trellis structure. The ratio of the first input length to the second input length must be the same as the ratio of the number of output bit streams of the decoder (k) to the number of input bit streams to the decoder (n).</entry>
    <entry key="inputInfOrNaN">The signal input cannot be Inf or NaN.</entry>    
    <entry key="maryNotIntPowTwo">The ModulationOrder property must be a positive integer power of two.</entry>
    <entry key="outLenNotMult">The output length must be a multiple of {0, number, integer}.</entry> 
    <entry key="unknownUB">If the signal input, X, is a column vector, the second dimension must be of fixed size.</entry>
    <entry key="commLicenseFailed">Unable to checkout a license for the Communications System Toolbox.</entry>
    <entry key="inLenNotMultBytes">When the ReflectInputBytes property is set to true, the input length must be an integer multiple of the ChecksumsPerFrame property value times 8.</entry>
    <entry key="out1LenNotMultBytes">When the ReflectInputBytes property is set to true, the first output length must be an integer multiple of the ChecksumsPerFrame property value times 8.</entry>
    <entry key="outMsgBlkLenNotMultBytesPlusDegree">When the ReflectInputBytes property is set to true, the output message block length minus the degree of the generator polynomial must be an integer multiple of 8.</entry>
    <entry key="inMsgBlkLenNotMultBytesPlusDegree">When the ReflectInputBytes property is set to true, the input message block length minus the degree of the generator polynomial must be an integer multiple of 8.</entry>
    <entry key="invalidPermutationVectorIndex">Permutation vector elements must be unique integers and between 1 and the signal width.</entry>
	<entry key="varSzNotSupPermVecFmProp">Variable-size signals are not supported when the permutation vector is from dialog property.</entry>
	<entry key="inputsDimsModeMismatch">Both inputs have to be either fixed-size or variable-size.</entry>
    <entry key="invalidInitialState">The InitialConditions vector must be of length equal to the length of the scramble polynomial - 1. The elements must be integers between 0 and Calculation Base - 1.</entry>
    <entry key="invalidInitialStateValues">The InitialConditions values must be integers between 0 and Calculation Base - 1.</entry>
    <entry key="invalidInitialStateLen">The 'InitialConditions' property must be a scalar or a vector of length equal to the length of the scramble polynomial - 1.</entry>
	<entry key="invalidScramRstPortDim">The reset input must be a scalar.</entry>
    <entry key="inport2Unconnected">Input 2 is not provided. Input value will be set to 0.</entry>
    <entry key="tooManyInputDims">The number of input dimensions is {0} while it can be at most {1}.</entry>
  </message>
</rsccat>