<?xml version="1.0"?>
<!-- Copyright 2011-2014 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="comm">
  <message>
    <entry key="outDataTypeNotFixpt">Error in ''{0}'': The {1}output data type must be fixed point with power-of-two slope and zero bias.</entry>
    <entry key="fixptWordLenGT32">Error in ''{0}'': Fixed-point inputs with word lengths greater than 32 bits are not supported.</entry>
    <entry key="intgratPeriodWrong">Error in ''{0}'': The 'Integration period (number of samples)' parameter must be a positive, real, integer scalar greater than one.</entry>
    <entry key="offsetWrongSgnOrDim">Error in ''{0}'': The 'Offset (number of samples)' parameter must be a non-negative integer scalar or vector.</entry>
    <entry key="intPeriodMismatch">Error in ''{0}'': The number of input rows must be an integer multiple of the integration period.</entry>
    <entry key="dimPropFailed">Error in ''{0}'': Port dimension propagation failed.</entry>
    <entry key="multRateInTrigNotAllow">Error in ''{0}'': Multirate operation is not allowed within triggered systems.</entry>
    <entry key="offsetWrongLenOrDim">Error in ''{0}'': The 'Offset (number of samples)' parameter must be a scalar or a vector with length equal to the number of input columns.</entry>
    <entry key="offsetNotScalar">Error in ''{0}'': For scalar inputs, the 'Offset (number of samples)' parameter must be a scalar.</entry>
    <entry key="inOrOutDimsWrong">Error in ''{0}'': Invalid dimensions are specified for the input or output.</entry>
    <entry key="resetNotBolOrDbl">Error in ''{0}'': The Reset input must be a Boolean or double-precision data type.</entry>
    <entry key="dataInOutTypesDiffer">Error in ''{0}'': The data input and output data types must be the same.</entry>
    <entry key="outFracLenNotInt">Error in ''{0}'': The fraction length of the output must be an integer.</entry>
    <entry key="outWdLenNotIntGE2">Error in ''{0}'': The word length of the output must be an integer greater than or equal to two.</entry>
    <entry key="multRateNotSupTrigSubSys">Error in ''{0}'': Multirate processing is not supported inside triggered subsystems.</entry>
    <entry key="inputNotOneOrZero">Error in ''{0}'': Input must be 0 or 1.</entry>
    <entry key="inputIntRangeNot0ToMm1">Error in ''{0}'': Input must be an integer between 0 and M-1.</entry>
    <entry key="sampTimesNotDiscWhenSnr">Error in ''{0}'': When the 'Mode' parameter is set to 'Signal to noise ratio', the input and output must have discrete sample times.</entry>
    <entry key="trigSampTimesNotSupSnr">Error in ''{0}'': Triggered sample times are not supported when the 'Mode' parameter is set to 'Signal to noise ratio (Eb/No)' or 'Signal to noise ratio (Es/No)'.</entry>
    <entry key="inSigPowWrongDim">Error in ''{0}'': The 'Input signal power' parameter must be a scalar or a vector with a length equal to the number of channels of the input.</entry>
    <entry key="ebEsSNRWrongDim">Error in ''{0}'': The 'Eb/No', 'Es/No', or 'SNR' parameter must be a scalar or a vector with a length equal to the number of channels of the input.</entry>
    <entry key="bitsPerSymWrongDim">Error in ''{0}'': The 'Number of bits per symbol' parameter must be a scalar or a vector with a length equal to the number of channels of the input.</entry>
    <entry key="symPeriodWrongDim">Error in ''{0}'': The 'Symbol period' parameter must be a scalar or a vector with a length equal to the number of channels of the input.</entry>
    <entry key="varWrongDim">Error in ''{0}'': The 'Variance' parameter must be a scalar or a vector with a length equal to the number of channels of the input.</entry>
    <entry key="symPeriodSampTimeMismatch">Error in ''{0}'': The 'Symbol period' parameter must be greater than the inherited sample time of the block.</entry>
    <entry key="inOutComplexitiesDiff">Error in ''{0}'': The input and output must have the same complexity.</entry>
    <entry key="dataNoiseComplexitiesDiff">Error in ''{0}'': The data and Noise inputs must have the same complexity</entry>
    <entry key="sampBasedInputsMatrix">Error in ''{0}'': For sample-based processing, inputs cannot be a matrix.</entry>
    <entry key="dataNoiseTypesDiffer">Error in ''{0}'': The data and Noise inputs must have the same data type.</entry>
    <entry key="dataVarTypesDiffer">Error in ''{0}'': The data and Variance inputs must have the same data type.</entry>
    <entry key="noiseInOutTypesDiffer">Error in ''{0}'': The Noise input and the output must have the same data type.</entry>
    <entry key="varInOutTypesDiffer">Error in ''{0}'': The Variance input and the output must have the same data type.</entry>
    <entry key="inputNotBinaryValue">Error in ''{0}'': Input values must be binary (0 or 1).</entry>
    <entry key="inputNotIntegerValue">Error in ''{0}'': The input must have integer values.</entry>
    <entry key="inputNotLenPrimPoly">Error in ''{0}'': Input values must be between 0 and 2^M-1, where M is the order of the primitive polynomial.</entry>
    <entry key="erasuresNotBinaryValue">Error in ''{0}'': The Erasures input must have a binary value (0 or 1).</entry>
    <entry key="erasuresWrongNumber">Error in ''{0}'': The sum of the number of erasures and punctures cannot exceed twice the error correcting capability of the code.</entry>
    <entry key="numDelaysWrongTrellisTerm">Error in ''{0}'': For trellis termination, the total number of delays for all k input bit streams must be an integer multiple of k.</entry>
    <entry key="outWidthTimesCodeRateWrong">Error in ''{0}'': The output width times the code rate must be greater than the total number of delays in the encoder.</entry>
    <entry key="inputDataTypeNotFltBoolIntSingleUfix1">Error in ''{0}'': The input data type must be floating point, boolean, integer or ufix1</entry>
    <entry key="inDataTypeNotDblInt32">Error in ''{0}'': The {1}input data type must be double precision or uint32</entry>
    <entry key="outputDataTypeNotFltBoolIntSingleUfix1">Error in ''{0}'': The output data type must be floating point, boolean, integer or ufix1</entry>
    <entry key="maryNotIntPowTwoNonZero">Error in ''{0}'': The 'M-ary number' parameter must be a positive, real, integer scalar that is a nonzero power of two.</entry>
    <entry key="modIndexNotRealNonNeg">Error in ''{0}'': The 'Modulation index' parameter must be a real, nonnegative scalar or column vector.</entry>
    <entry key="mainLobDurNotPosRealIntScl">Error in ''{0}'': The 'Main lobe pulse duration' parameter must be a positive, real, integer scalar.</entry>
    <entry key="rolloffNotRealSclBinaryVal">Error in ''{0}'': The 'Rolloff' parameter must be a real scalar between 0 and 1, inclusive.</entry>
    <entry key="btProdNotPosRealScl">Error in ''{0}'': The 'BT product' parameter must be a positive, real scalar.</entry>
    <entry key="pulsLenNotPosRealIntScl">Error in ''{0}'': The 'Pulse length' parameter must be a positive, real, integer scalar.</entry>
    <entry key="phsOffNotRealScl">Error in ''{0}'': The 'Phase offset' parameter must be a real scalar.</entry>
    <entry key="sampPerSymNotPosRealIntScl">Error in ''{0}'': The 'Samples per symbol' parameter must be a positive, real, integer scalar.</entry>
    <entry key="symPrehisLengthValuesErr">Error in ''{0}'': The 'Symbol Prehistory' parameter must be a real integer scalar or vector of length one less than the pulse length.  The parameter values must be odd integers between -(M-1) and M-1 inclusive.</entry>
    <entry key="tracebkNotPosRealIntScl">Error in ''{0}'': The 'Traceback depth' parameter must be a positive, real, integer scalar.</entry>
    <entry key="modIndexNumNotPosRealIntScl">Error in ''{0}'': The 'Modulation index' parameter numerator must be a positive, real, integer scalar.</entry>
    <entry key="modIndexDenNotPosRealIntScl">Error in ''{0}'': The 'Modulation index' parameter denominator must be a positive, real, integer scalar.</entry>
    <entry key="outDataTypeNotDblBoolTypBit">Error in ''{0}'': When the 'Output type' parameter is set to 'Bit', outputs must have a double-precision or Boolean data type.</entry>
    <entry key="outDataTypeBoolWhenInt">Error in ''{0}'': When the 'Output type' parameter is set to 'Integer', outputs cannot be Boolean.</entry>
    <entry key="inputNotBinaryWhenBit">Error in ''{0}'': When the 'Input type' parameter is set to 'Bit', the input must be scalars or vectors containing only the values 0 or 1.</entry>
    <entry key="inputRangeErrWhenInt">Error in ''{0}'': When the 'Input type' parameter is set to 'Integer', inputs must be odd integers between -(M-1) and M-1 inclusive.</entry>
    <entry key="symPreHistNotMultNumSymb">Error in ''{0}'': The length of the 'Symbol prehistory' parameter must be a multiple of the number of input symbols.</entry>
    <entry key="inputWrongTypeWhenBit">Error in ''{0}'': When the 'Input type' parameter is set to 'Bit', inputs must have a double-precision or Boolean data type.</entry>
    <entry key="inputWrongTypeWhenInt">Error in ''{0}'': When the 'Input type' parameter is set to 'Integer', inputs must have a double-precision or signed integer data type.</entry>
    <entry key="outMsgBlkLenWrongLen">Error in ''{0}'': The output message block length must be greater than the degree of the generator polynomial.</entry>
    <entry key="inMsgBlkLenWrongLen">Error in ''{0}'': The input message block length must be greater than the degree of the generator polynomial.</entry>
    <entry key="inDataTypeNotFloatBoolIntWhenInt">Error in ''{0}'': When the 'Input type' parameter is set to 'Integer,' the input must have a single-precision, double-precision, Boolean, or integer data type.</entry>
    <entry key="inDataTypeNotFloatIntWhenInt">Error in ''{0}'': When the 'Input type' parameter is set to 'Integer,' the input must have a single-precision, double-precision, or integer data type.</entry>
    <entry key="inDataTypeNotFloatBoolIntWhenBit">Error in ''{0}'': When the 'Input type' parameter is set to 'Bit,' the input must have a single-precision, double-precision, Boolean, or integer data type.</entry>
    <entry key="initCondNotSclVecOrDimWrong">Error in ''{0}'': The 'Initial conditions' parameter must either be a finite-valued scalar, or a row vector with the same dimensions as the 'Interleaver delay' parameter.</entry>
    <entry key="noiseVarNotRealPosScl">Error in ''{0}'': The 'Noise variance' parameter must be a real, positive scalar.</entry>
    <entry key="bitsPerIntWrongVal">Error in ''{0}'': The 'Number of bits per integer' parameter must be a positive integer scalar less than or equal to 32.</entry>
    <entry key="inputUnsgnIntsWrongRange">Error in ''{0}'': Inputs must be integers in the range 0 to (2^(NBIT) - 1).  To use signed integer inputs, set the 'Treat input values as' parameter to 'Signed'.</entry>
    <entry key="inputSgnIntsWrongRange">Error in ''{0}'': Inputs must be integers in the range -(2^(NBIT-1)) to (2^(NBIT-1) - 1). To use unsigned integer inputs, set the 'Treat input values as' parameter to 'Unsigned'.</entry>
    <entry key="inNotColVecLenWrong">Error in ''{0}'': Inputs must be a column vector with a length equal to an integer multiple of the number of bits per integer.</entry>
    <entry key="outNotSclOrNumBitsNotInWdth">Error in ''{0}'': For sample-based processing, the output must be scalar and the 'Number of bits per integer' parameter must match the input width.</entry>
    <entry key="sampPerFrameNotPosInt">Error in ''{0}'': The 'Samples per frame' parameter must be a positive integer.</entry>
    <entry key="resetOutputSampTimesDiffer">Error in ''{0}'': The sample time of the Reset input must be equal to the sample time of the output.</entry>
    <entry key="resetNotSclOrColVec">Error in ''{0}'': The Reset input must be a scalar or a column vector.</entry>
    <entry key="resetWrongWidth">Error in ''{0}'': The Reset input width must be equal to value of the 'Samples per frame' parameter.</entry>
    <entry key="numPackBitsWrongTypeOrSz">Error in ''{0}'': The 'Number of packed bits' parameter must be a positive integer less than or equal to 32.</entry>
    <entry key="resetWrongDim">Error in ''{0}'': Unoriented Reset inputs must be scalar. 2-D column vector Reset inputs are also permitted if the column vector length is equal to the 'Samples per frame' parameter.</entry>
    <entry key="maskInLenNotPolyOrder">Error in ''{0}'': The Mask input must be a vector with a length equal to the polynomial order.</entry>
    <entry key="iniStNotSclOrVec">Error in ''{0}'': The initial states input must be scalar or a vector with a length equal to the polynomial order.</entry>
    <entry key="maskSmpTmNotEqlOutSmpTm">Error in ''{0}'': The sample time of the Mask input must be equal to the sample time of the output.</entry>
    <entry key="outSmpTmNotSmpTmSetting">Error in ''{0}'': The sample time of the output must be equal to the 'Sample time' parameter.</entry>
    <entry key="maskInDataTypewrong">Error in ''{0}'': The Mask input must be a uint8, ufix1, or double-precision data type.</entry>
    <entry key="iniStInDataTypeWrong">Error in ''{0}'': The initial states input must be a uint8, ufix1, or double-precision data type.</entry>    
    <entry key="initStInpNotBinaryValued">Error in ''{0}'': The initial states input must have a binary value (0 or 1).</entry>    
    <entry key="sgnFixptInNotSupportMary">Error in ''{0}'': Signed fixed-point input data types are only supported when the 'M-ary value' parameter is 2, 4, or 8.</entry>
    <entry key="inDataTypeWrongWhenSoft">Error in ''{0}'': The input must have a single-precision or double-precision data type when the 'Decision type' parameter is set to 'Log-likelihood ratio' or 'Approximate log-likelihood ratio'.</entry>
    <entry key="denormFactorWordLenWrong">Error in ''{0}'': The denormalization factor word length must be less than or equal to 64.</entry>
    <entry key="outWordLenGT32">Error in ''{0}'': The output word length must be less than or equal to 32.</entry>
    <entry key="calcBaseNot2">Error in ''{0}'': The 'Calculation base' parameter must be set to '2' when the input has a Boolean data type.</entry>
    <entry key="opModeNotContinuous">Error in ''{0}'': For single symbol inputs, set the 'Operation mode' parameter to 'Continuous' when you want to specify a value greater than 1 for the 'Traceback depth' parameter.</entry>
    <entry key="tracebackNotLENumSymb">Error in ''{0}'': The 'Traceback depth' parameter must be less than or equal to the number of symbols in the input.</entry>
    <entry key="fltOutFixptInNotSupported">Error in ''{0}'': Floating-point outputs are not supported for fixed-point inputs. Change the input data type, select a different 'Output data type' setting, or select a different Data Type Override setting for the subsystem containing this block.</entry>
    <entry key="inputNotIntFracLenZero">Error in ''{0}'': The input must be an integer with a fraction length of zero.</entry>
    <entry key="inDataTypeNotUFixpt">Error in ''{0}'': Fixed-point inputs must be unsigned with a slope of one and zero bias.</entry>
    <entry key="inWrongTypeWhenUnquant">Error in ''{0}'': When the 'Decision type' parameter is set to 'Unquantized,' the input values must be single-precision or double-precision.</entry>
    <entry key="inWrongTypeWhenHardDecs">Error in ''{0}'': When the 'Decision type' parameter is set to 'Hard decision,' the input values must be Boolean, single-precision, double-precision, or fixed-point integers.</entry>
    <entry key="inputWdLenNotOne">Error in ''{0}'': The word length of the input must be 1.</entry>
    <entry key="inWrongTypeWhenSoftDecs">Error in ''{0}'': When the 'Decision type' parameter is set to 'Soft decision,' the input values must be single-precision, double-precision, or fixed-point integers.</entry>
    <entry key="inWrongSzWhenSoftDecs">Error in ''{0}'': When the 'Decision type' parameter is set to 'Soft decision,' the word length of the input must equal the number of soft-decision bits.</entry>
    <entry key="outWrongTypeWhenUnquant">Error in ''{0}'': When the 'Decision type' parameter is set to 'Unquantized,' the output must have a single-precision or double-precision data type.</entry>
    <entry key="outDataTypeUnsuppHrwd">Error in ''{0}'': The output data type must be the smallest unsigned integer supported by your hardware configuration.</entry>
    <entry key="phaseOffNotRealScl">Error in ''{0}'': The "Phase offset" parameter must be a finite, real scalar.</entry>
    <entry key="outDataTypeNotFloatUIntUFixpt">Error in ''{0}'': The output must have a single-precision, double-precision, uint8, uint16, uint32, or ufix[n] data type.</entry>
    <entry key="outWordLenTooSmall">Error in ''{0}'': The output word length is not large enough for the full possible range of output values.</entry>
    <entry key="outFixPtLenGT32NotSupport">Error in ''{0}'': Fixed-point outputs with word lengths greater than 32 bits are not supported.</entry>
    <entry key="sigConstelWdLenWrong">Error in ''{0}'': The signal constellation word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="acc1WdLenWrong">Error in ''{0}'': The accumulator 1 word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="prodInWdLenWrong">Error in ''{0}'': The product input word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="prodOutWdLenWrong">Error in ''{0}'': The product output word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="acc2WdLenWrong">Error in ''{0}'': The accumulator 2 word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="acc3WdLenWrong">Error in ''{0}'': The accumulator 3 word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="noiseScaleLenWrong">Error in ''{0}'': The noise scaling input word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="invNoiseVarLenWrong">Error in ''{0}'': The inverse noise variance word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="outWdLenWrong">Error in ''{0}'': The output word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="resetWrongValue">Error in ''{0}'': For scalar inputs the reset port must be set to 'None' or 'On nonzero input via port'.</entry>
    <entry key="inLenNotMultSmpsSymb">Error in ''{0}'': The input vector length must be an integer multiple of the number of samples per symbol.</entry>
    <entry key="unsgnWordLenGT32">Error in ''{0}'': Unsigned integer or fixed-point input data types must have word lengths less than or equal to 32.</entry>
    <entry key="inOutDimWrongMsgCdWrd">Error in ''{0}'': The input and output dimensions must be consistent with the message or codeword length, including the effects of possible puncturing.</entry>
    <entry key="initStatesGenPolyMismatch">Error in ''{0}'': The 'Initial states' parameter must be a binary scalar or vector of length equal to the degree of the generator polynomial.</entry>
    <entry key="outMaskGenPolyMismatch">Error in ''{0}'': The 'Output mask vector (or scalar shift value)' parameter must be a real non-negative integer, or a binary vector with a length equal to the degree of the generator polynomial.</entry>
    <entry key="inValsWrongForDecide">Error in ''{0}'': When the 'Decision type' parameter is set to 'Hard decision,' input values must be 0 or 1. When the 'Decision type' parameter is set to 'Soft decision,' input values must be integers in the range 0 to (2^N)-1, where N is the number of soft decision bits.</entry>
    <entry key="inOutNotBothFixptEmbed">Error in ''{0}'': When you select ASIC/FPGA as the embedded hardware device, set the 'Output data type' parameter to 'Smallest unsigned integer' and the 'Decision type' parameter to 'Hard decision', the block accepts an input signal with a ufix(1) data type. When you set the 'Decision type' parameter to 'Soft decision', the block accepts an input signal with an unsigned fixed-point data type and a word length equal to the 'Number of soft decision bits' parameter value. 'Unquantized' is not a valid selection for the 'Decision type' parameter.</entry>
    <entry key="fltOutNonFltInNotSupport">Error in ''{0}'': Floating-point output data types are not supported when the input is not a floating-point data type. Change the 'Output data type' parameter to a non-floating-point data type.</entry>
    <entry key="inDataTypeNotFloatSFixpt">Error in ''{0}'': The input data type must be floating point or signed fixed point with unit slope and zero bias.</entry>
    <entry key="inDataTypeNotFloatUFixpt">Error in ''{0}'': The input data type must be floating point or unsigned fixed point with unit slope and zero bias.</entry>
    <entry key="outDataTypeNotFloatUFixpt">Error in ''{0}'': The output data type must be floating point or unsigned fixed point with unit slope and zero bias.</entry>
    <entry key="dtTrueSinglesNotSupported">Error in ''{0}'': This block does not support the 'Single' mode of the 'Data type override'  parameter on the Fixed-Point Tool. Change either the model or the subsystem 'Data Type Override' setting.</entry>
    <entry key="inputsWrongTypeWhenBit">Error in ''{0}'': When the 'Input type' parameter is set to 'Bit,' inputs must have a single-precision, double-precision, Boolean, integer, or ufix1 data type.</entry>
    <entry key="outDataTypeNotFloatSFixpt">Error in ''{0}'': The output must be a single-precision, double-precision, or signed fixed point data type with a slope of one and zero bias.</entry>
    <entry key="inputFixptNotIntUFix1">Error in ''{0}'': Fixed-point inputs must be an integer or ufix1.</entry>
    <entry key="fixptNotSupIfHardEvenPow2">Error in ''{0}'': Fixed-point input data types are only supported when the 'Decision type' parameter is set to 'Hard decision' and the 'M-ary number' parameter is an even power of two.</entry>
    <entry key="maryWrongTypeOrVal">Error in ''{0}'': The 'M-ary number' parameter must be a positive integer scalar greater than or equal to two.</entry>
    <entry key="inputsWrongTypeBinMod">Error in ''{0}'': When using binary modulation, inputs must have a single-precision, double-precision, Boolean, integer, or ufix1 data type.</entry>
    <entry key="inputsWrongTypeNonBinMod">Error in ''{0}'': When using nonbinary modulation with a signal constellation containing M elements, inputs must have a single-precision, double-precision, integer, or ufix(ceil(log2(M))) data type.</entry>
    <entry key="puncVecWrongTypeOrVals">Error in ''{0}'': The 'Puncture vector' parameter must be a vector of double-precision one and zero values.</entry>
    <entry key="insZerVecWrongTypeOrVals">Error in ''{0}'': The 'Insert zero vector' parameter must be a vector of double-precision one and zero values.</entry>
    <entry key="elemNotColVec">Error in ''{0}'': The 'Element' parameter must be a column vector.</entry>
    <entry key="puncVecAllZeros">Error in ''{0}'': The 'Puncture vector' parameter must have at least one nonzero element.</entry>
    <entry key="insZerVecAllZeros">Error in ''{0}'': The 'Insert zeros vector' parameter must have at least one nonzero element.</entry>
    <entry key="inLenNotMultPuncVec">Error in ''{0}'': The input length must be an integer multiple of the 'Puncture vector' parameter length.</entry>
    <entry key="inLenNotMultInsZer">Error in ''{0}'': The input length must be an integer multiple of the number of ones in the 'Insert zero vector' parameter.</entry>
    <entry key="outLenNotMultOnes">Error in ''{0}'': The output length must be an integer multiple of the number of ones in the 'Puncture vector' parameter.</entry>
    <entry key="outLenNotMultInsZerLen">Error in ''{0}'': The output length must be an integer multiple of the 'Insert zero vector' parameter length.</entry>
    <entry key="bitOutMNotPow2">Error in ''{0}'': When the 'Output type' parameter is set to 'Bit', the 'M-ary number' parameter must be a positive integer power of two.</entry>
    <entry key="bitInMNotPow2">Error in ''{0}'': When the 'Input type' parameter is set to 'Bit', the 'M-ary number' parameter must be a positive integer power of two.</entry>
    <entry key="grayMNotPow2">Error in ''{0}'': When the 'Constellation ordering' parameter is set to 'Gray', the 'M-ary number' parameter must be a positive integer power of two.</entry>
    <entry key="inputNot1D2DColVec">Error in ''{0}'': The input must be a column vector.</entry>
    <entry key="outputNot1D2DColVec">Error in ''{0}'': The output must be a column vector.</entry>
    <entry key="bitInVecInWrongLen">Error in ''{0}'': When the 'Input type' parameter is set to 'Bit', the length of the input must be an integer multiple of the number of bits per symbol.</entry>
    <entry key="bitOutVecOutWrongLen">Error in ''{0}'': When the 'Output type' parameter is set to 'Bit', the length of the output must be an integer multiple of the number of bits per symbol.</entry>
    <entry key="outWrdLenTooSmallForRange">Error in ''{0}'': The output word length is not large enough to cover the range of possible output values. An unsigned word length must be at least {1, number, integer} and a signed word length must be at least {2, number, integer}.</entry>
    <entry key="outNotIntScalar">Error in ''{0}'': The output data type must be an integer scalar.</entry>
    <entry key="inNotInRange1To3">Error in ''{0}'': The input must be an integer from 0 to 3.</entry>
    <entry key="dimTrellisNotConsistent">Error in ''{0}'': The port dimensions must be consistent with the data in the trellis structure.</entry>
    <entry key="inDataTypeWrongForInt">Error in ''{0}'': When the 'Input type' parameter is set to 'Integer', the input must have a ufix2, integer, or floating-point data type.</entry>
    <entry key="inDataTypeWrongForBit">Error in ''{0}'': When the 'Input type' parameter is set to 'Bit', the input must have a ufix1, Boolean, integer, or floating-point data type.</entry>
    <entry key="maryNotEvenGE2">Error in ''{0}'': The 'M-ary number' parameter must be an even number greater than or equal to two.</entry>
    <entry key="inputsWrongTypeMary2">Error in ''{0}'': When the 'M-ary number' parameter is two and the 'Input type' parameter is set to 'Integer,' inputs must have a single-precision, double-precision, Boolean, integer, or ufix1 data type.</entry>
    <entry key="inputsWrongTypeMaryGT2">Error in ''{0}'': When the 'M-ary number' parameter is greater than two and the 'Input type' parameter is set to 'Integer,' inputs must have a single-precision, double-precision, integer, or ufix(ceil(log2(M))) data type.</entry>
    <entry key="modTypeInvalid">Error in ''{0}'': The value entered for the 'Modulation Type' parameter is invalid.</entry>
    <entry key="inNotColVecEvenLen">Error in ''{0}'': In single-rate processing mode, the input must be an even length vector. The block is in single-rate processing mode when the 'Rate options' parameter is set to 'Enforce single-rate processing', or for frame-based inputs, is set to 'Inherit from input (this choice will be removed - see release notes)'.</entry>
    <entry key="bitOutNotColVecEvenLen">Error in ''{0}'': In single-rate processing mode, when the 'Input type' parameter is set to 'Bit', the output must be an even length vector. The block is in single-rate processing mode when the 'Rate options' parameter is set to 'Enforce single-rate processing', or for frame-based inputs, is set to 'Inherit from input (this choice will be removed - see release notes)'.</entry>
    <entry key="outNotColVecLen2">Error in ''{0}'': In multirate processing mode, when the 'Input type' parameter is set to 'Bit', the output must be a column vector of length 2. The block is in multirate processing mode when the 'Rate options' parameter is set to 'Allow multirate processing', or for sample-based inputs, is set to 'Inherit from input (this choice will be removed - see release notes)'.</entry>
    <entry key="accWdLenNot2To128">Error in ''{0}'': The accumulator word length must be an integer from 2 to 128.</entry>
    <entry key="targNumErrorsWrongValue">Error in ''{0}'': The 'Target number of errors' parameter must either be a positive integer or Inf.</entry>
    <entry key="maxNumSymWrongValue">Error in ''{0}'': The 'Maximum number of symbols' parameter must either be a positive integer or Inf.</entry>
    <entry key="txRxLengthsDiffer">Error in ''{0}'': The Tx and Rx inputs must have the same length.</entry>
    <entry key="codeGenNotSupportedInThisMode">Error in ''{0}'': Code generation is not supported when the 'Output data' parameter is set to Workspace.</entry>
    <entry key="permVecWrongTypeOrDim">Error in ''{0}'': Invalid permutation vector type or dimension.</entry>
    <entry key="prodOutWdLenGT128">Error in ''{0}'': The product output word length must be less than or equal to 128.</entry>
    <entry key="numElementsMismatch">Error in ''{0}'': The number of elements in the input and output signals must match the length of the 'Elements' parameter.</entry>
    <entry key="fixedPtNotSupDecisType">Error in ''{0}'': Fixed-point input data types are only supported when the 'Decision type' parameter is set to 'Hard decision' or 'Approximate LLR'.</entry>
    <entry key="puncVecNotColVec">Error in ''{0}'': The 'Puncture vector' parameter must be a column vector.</entry>
    <entry key="inDimNotConsistentTrellisInEncd">Error in ''{0}'': The port dimensions must be consistent with the data in the trellis structure. The input length must be an integer multiple of the number of input bit streams (k) to the encoder.</entry>
    <entry key="outDimNotConsistentTrellisOutEncd">Error in ''{0}'': The port dimensions must be consistent with the data in the trellis structure. The output length must be an integer multiple of the number of output bit streams (n) from the encoder.</entry>
    <entry key="inWdthNotMultOnesPuncVec">Error in ''{0}'': The input length must be a multiple of the number of ones in the 'Puncture vector' parameter.</entry>
    <entry key="inDimNotConsistentTrellisInDecd">Error in ''{0}'': The input dimensions must be consistent with the data in the trellis structure. The input length must be an integer multiple of the number of input bit streams to the decoder (n).</entry>
    <entry key="outDimNotConsistentTrellisOutDecd">Error in ''{0}'': The output dimensions must be consistent with the data in the trellis structure. The output length must be an integer multiple of the number of output bit streams of the decoder (k).</entry>
    <entry key="inDimNotConsistentTrellisOutDecd">Error in ''{0}'': The input dimensions must be consistent with the data in the trellis structure. The input length must be an integer multiple of the number of output bit streams of the decoder (k).</entry>
    <entry key="outDimNotConsistentTrellisInDecd">Error in ''{0}'': The output dimensions must be consistent with the data in the trellis structure. The output length must be an integer multiple of the number of input bit streams to the decoder (n).</entry>
    <entry key="resetSampTimeNotOutSampTime">Error in ''{0}'': The reset sample time must be the same as the output sample time.</entry>
    <entry key="resetInSampTimeMismatch">Error in ''{0}'': The input data and reset ports must have the same port sample time.</entry>
    <entry key="resetSampTimeNotSymbPer">Error in ''{0}'': The reset sample time must be the same as the symbol period.</entry>
    <entry key="inOutSampNotDerepeat">Error in ''{0}'': The output frame length must equal the input frame length divided by the value of the 'Derepeat factor' parameter.</entry>
    <entry key="inOutSampsDiffer">Error in ''{0}'': The output frame length must equal the input frame length.</entry>
    <entry key="sampsElemExceedInWidth">Error in ''{0}'': The elements of the 'Selected samples from frame' parameter must be smaller than or equal to the input port width.</entry>
    <entry key="sampsWidthExceedInWidth">Error in ''{0}'': Sel input values must be non-negative integers less than or equal to the number of rows of the input.</entry>
    <entry key="resetDatatTypeWrong">Error in ''{0}'': The Reset input must have a double-precision or  Boolean data type.</entry>
    <entry key="workSpaceError">Error in ''{0}'': An internal error occurred while attempting to write the output data to the workspace.</entry>
    <entry key="workSpaceTransferError">Error in ''{0}'': An internal error occurred while attempting to write the transfer matrix to the requested workspace.</entry>
    <entry key="phaseFreqMatDimsDiffer">Error in ''{0}'': The 'Phase offset' and 'Frequency offset' parameters must have the same dimensions.</entry>
    <entry key="phaseFreqVecLensDiffer">Error in ''{0}'': The 'Phase offset' and 'Frequency offset' parameters must have the same length.</entry>
    <entry key="phaseFreqOffsetNotScalar">Error in ''{0}'': The 'Phase offset' and 'Frequency offset' parameters must both be scalar when the input is scalar.</entry>
    <entry key="sigConstWrongSize">Error in ''{0}'': The 'Signal constellation' parameter must be a vector of at least two elements that represents the set of constellation points that the modulator in the current model can generate.</entry>
    <entry key="preambleWrong">Error in ''{0}'': The 'Expected preamble' parameter must be a vector of integers between 0 and (the order of the constellation - 1).</entry>
    <entry key="postambleWrong">Error in ''{0}'': The 'Expected postamble' parameter must be a vector of integers between 0 and (the order of the constellation - 1).</entry>
    <entry key="trellisStatesTooBig">Error in ''{0}'': The block parameter settings describe a trellis with more than 2^20 states. This is causing a memory allocation failure.</entry>
    <entry key="lenDataNotMultSampsPerSym">Error in ''{0}'': The input frame length must be an integer multiple of the 'Samples per symbol' parameter.</entry>
    <entry key="tracebackDepthWrong">Error in ''{0}'': The sum of the 'Traceback depth' parameter and the length of 'Expected preamble' parameter, multiplied by the 'Samples per symbol' parameter must be less than or equal to the input frame length.</entry>
    <entry key="lenChanNotMultSampsPerSym">Error in ''{0}'': The input frame length must be an integer multiple of the 'Samples per symbol' parameter.</entry>
    <entry key="inChanOutTypesDiffer">Error in ''{0}'': The input channel and output data types must be the same.</entry>
    <entry key="freqOffDimsWrong">Error in ''{0}'': The number of rows and/or columns in the frequency offset input must either be 1 or the same as the data input.</entry>
    <entry key="phaseOffDimsWrong">Error in ''{0}'': The number of rows and/or columns of the 'Phase offset' parameter must either be 1 or the same as the data input.</entry>
    <entry key="freqOffDimsWrongP">Error in ''{0}'': The number of rows and/or columns of the 'Frequency offset' parameter must either be 1 or the same as the data input.</entry>
    <entry key="freqOffElemNumWrong">Error in ''{0}'': The number of elements of the frequency offset input must either be 1 or the same as the number of data input channels.</entry>
    <entry key="phaseOffElemNumWrong">Error in ''{0}'': The number of elements in the 'Phase offset' parameter must either be 1 or the same as the number of data input channels.</entry>
    <entry key="freqOffElemNumWrongP">Error in ''{0}'': The number of elements in the 'Frequency offset' parameter must either be 1 or the same as the number of data input channels.</entry>
    <entry key="freqOffElemSzWrong">Error in ''{0}'': The number of elements in the frequency offset input must either be 1 or the same as the data input frame length.</entry>
    <entry key="phaseOffElemSzWrongP">Error in ''{0}'': The number of elements in the 'Phase offset' parameter must either be 1 or the same as the data input frame length.</entry>
    <entry key="freqOffElemSzWrongP">Error in ''{0}'': The number of elements in the 'Frequency offset' parameter must either be 1 or the same as the data input frame length.</entry>
    <entry key="freqOffElemRwColWrong">Error in ''{0}'': The number of elements in the frequency offset input must either be 1 or the same as the number of rows or columns in the data input.</entry>
    <entry key="phaseOffElemRwColWrongP">Error in ''{0}'': The number of elements in the 'Phase offset' parameter must either be 1 or the same as the number of rows or columns in the data input.</entry>
    <entry key="freqOffElemRwColWrongP">Error in ''{0}'': The number of elements in the 'Frequency offset' parameter must either be 1 or the same as the number of rows or columns in the data input.</entry>
    <entry key="freqOffRowsWrong">Error in ''{0}'': The number of rows in the frequency offset input must either be 1 or the same as the data input.</entry>
    <entry key="phaseOffRowsWrongP">Error in ''{0}'': The number of rows in the 'Phase offset' parameter must either be 1 or the same as the data input.</entry>
    <entry key="freqOffRowsWrongP">Error in ''{0}'': The number of rows in the 'Frequency offset' parameter must either be 1 or the same as the data input.</entry>
    <entry key="freqOffColsWrong">Error in ''{0}'': The number of columns in the frequency offset input must either be 1 or the same as the data input.</entry>
    <entry key="phaseOffColsWrongP">Error in ''{0}'': The number of columns in the 'Phase offset' parameter must either be 1 or the same as the data input.</entry>
    <entry key="freqOffColsWrongP">Error in ''{0}'': The number of columns in the 'Frequency offset' parameter must either be 1 or the same as the data input.</entry>
    <entry key="inNot1D2DColVecEvenLen">Error in ''{0}'': The input must be a column vector with an even number of elements.</entry>
    <entry key="outNot1D2DColVecEvenLen">Error in ''{0}'': The output must be a column vector with an even number of elements.</entry>
    <entry key="initStatNotRealIntSclOrBin">Error in ''{0}'': The 'Initial states' parameter must be an real integer scalar or a binary vector.</entry>
    <entry key="sampTimeNotRealFinPosScl">Error in ''{0}'': The 'Sample time' parameter must be a real, finite, positive scalar.</entry>
    <entry key="sumWdLenGT128">Error in ''{0}'': The sum word length must be less than or equal to 128.</entry>
    <entry key="outBoolMaryNot2">Error in ''{0}'': When the 'Output type' parameter is set to 'Integer', outputs can have a Boolean data type when the 'M-ary number' parameter is set to 2.</entry>
    <entry key="triggSampTimeNotAllowed">Error in ''{0}'': Triggered sample times are not supported.</entry>
    <entry key="taskingNotSingle">Error in ''{0}'': For multirate processing, the tasking mode must be set to 'SingleTasking'. You can set the tasking mode via the Simulation>Configuration Parameters>Solver dialog.</entry>
    <entry key="inDataTypeNotDblBoolWhenBit">Error in ''{0}'': When the 'Input type' parameter is set to 'Bit', the input must have a Boolean or double-precision data type.</entry>
    <entry key="sigConstModeWrong">Error in ''{0}'': The 'Signal constellation' parameter must be a real, double-precision integer with a value between 1 and {1, number, integer}, inclusive.</entry>
    <entry key="accOneModeWrong">Error in ''{0}'': The 'Accumulator 1' parameter must be a real, double-precision integer with a value between 1 and {1, number, integer}, inclusive.</entry>
    <entry key="prodInModeWrong">Error in ''{0}'': The 'Product input' parameter must be a real, double-precision integer with a value between 1 and {1, number, integer}, inclusive.</entry>
    <entry key="prodOutModewrong">Error in ''{0}'': The 'Product output' parameter must be a real, double-precision integer with a value between 1 and {1, number, integer}, inclusive.</entry>
    <entry key="accTwoModeWrong">Error in ''{0}'': The 'Accumulator 2' parameter must be a real, double-precision integer with a value between 1 and {1, number, integer}, inclusive.</entry>
    <entry key="accThreeModeWrong">Error in ''{0}'': The 'Accumulator 3' parameter must be a real, double-precision integer with a value between 1 and {1, number, integer}, inclusive.</entry>
    <entry key="noiseScalModeWrong">Error in ''{0}'': The 'Noise scaling input' parameter must be a real, double-precision integer with a value between 1 and {1, number, integer}, inclusive.</entry>
    <entry key="invVarModeWrong">Error in ''{0}'': The 'Inverse noise variance' parameter must be a real, double-precision integer with a value between 1 and {1, number, integer}, inclusive.</entry>
    <entry key="outModeWrong">Error in ''{0}'': The 'Output' parameter must be a real, double-precision integer with a value between 1 and {1, number, integer}, inclusive.</entry>
    <entry key="prodOutWdLenNot3To128">Error in ''{0}'': The product output word length must be an integer between 3 and 128, inclusive.</entry>
    <entry key="engyProdOutWdLenNot3To128">Error in ''{0}'': The energy product output word length must be an integer between 3 and 128, inclusive.</entry>
    <entry key="engyAccWdLenNot2To128">Error in ''{0}'': The energy accumulator word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="divOutWdLenNot2To128">Error in ''{0}'': The division output word length must be an integer between 2 and 128, inclusive.</entry>
    <entry key="unknownDeviceType">Error in ''{0}'': Unrecognized or unhandled device type.</entry>
    <entry key="cmplxProdWordLenGT128">Error in ''{0}'': Complex product word lengths must be less than or equal to 128 bits.</entry>
    <entry key="numAntNotOneCol">Error in ''{0}'': The 'Number of receive antennas' parameter value must be 1 when the input is a column vector.</entry>
    <entry key="inColsNotNumAnt">Error in ''{0}'': The number of input columns must be equal to the value of the 'Number of receive antennas' parameter.</entry>
    <entry key="sigRowsNotGT1">Error in ''{0}'': The number of input rows must be greater than 1.</entry>
    <entry key="sigDim1NotGT1">Error in ''{0}'': The first dimension of the input must be greater than 1.</entry>
    <entry key="inDim3NotNumAnt">Error in ''{0}'': The third dimension of the input must be equal to the value of the 'Number of receive antennas' parameter.</entry>
    <entry key="sigNot2D3D">Error in ''{0}'': The input must be a 2-D or 3-D matrix.</entry>
    <entry key="numAntennaNotOneMat">Error in ''{0}'': When the channel estimation input is a matrix, the value of the 'Number of receive antennas' parameter must be 1.</entry>
    <entry key="chanEstColNotNumAnt">Error in ''{0}'': The number of columns in the channel estimation input must be equal to the value of the 'Number of transmit antennas' parameter.</entry>
    <entry key="chanEstDim2NotNumAnt">Error in ''{0}'': The second dimension of the channel estimation input must be equal to the value of the 'Number of transmit antennas' parameter.</entry>
    <entry key="chanEstDim3NotNumRecAnt">Error in ''{0}'': The third dimension of the channel estimation input must be equal to the value of the 'Number of receive antennas' parameter.</entry>
    <entry key="chanEstDim1NotGT1">Error in ''{0}'': The first dimension of the channel estimation input must be greater than 1.</entry>
    <entry key="chanEstDim3NotNumTranAnt">Error in ''{0}'': The third dimension of the channel estimation input must be equal to the value of the 'Number of transmit antennas' parameter.</entry>
    <entry key="chanEstDim4NotNumRecAnt">Error in ''{0}'': The fourth dimension of the channel estimation input must be equal to the value of the 'Number of receive antennas' parameter.</entry>
    <entry key="chanEstNot2D3D4D">Error in ''{0}'': The channel estimation input must be a 2-D, 3-D, or 4-D matrix.</entry>
    <entry key="outputNotColVecOrMat">Error in ''{0}'': The output must be a column vector or a matrix.</entry>
    <entry key="inputFltTypesDiffer">Error in ''{0}'': The floating-point data types of the inputs must be the same.</entry>
    <entry key="inOutFltTypesDiffer">Error in ''{0}'': The floating-point data types of the input and output must be the same.</entry>
    <entry key="inputNotColVecOrMat">Error in ''{0}'': The input must be a column vector or a matrix.</entry>
    <entry key="outColsNotNumAnt">Error in ''{0}'': The number of output columns must be equal to the value of the 'Number of transmit antennas' parameter.</entry>
    <entry key="outDim1NotGT1">Error in ''{0}'': The first dimension of the output must be greater than 1.</entry>
    <entry key="outDim3NotNumAnt">Error in ''{0}'': The third dimension of the output must be equal to the value of the 'Number of transmit antennas' parameter.</entry>
    <entry key="outNot2D3D">Error in ''{0}'': The output must be a 2-D or 3-D signal.</entry>
    <entry key="pulsWrongNumCols">Error in ''{0}'': The pulse shaping filter must be a polyphase matrix with a number of columns equal to the value of the 'Samples per symbol' parameter.</entry>
    <entry key="filtCoefLtSampsSymb">Error in ''{0}'': For proper operation, the number of filter coefficients should be greater than the value of the 'Samples per symbol' parameter. The interpolation order is (filter length)/(samples per symbol) - 1.</entry>
    <entry key="inDataTypeNotDblIntWhenInt">Error in ''{0}'': When the 'Input type' parameter is set to 'Integer', the input must have an integer or double-precision data type.</entry>
    <entry key="initCondWrongNum">Error in ''{0}'': The 'Initial Conditions' parameter must either be a scalar or a vector the size of the output buffer.</entry>
    <entry key="maryWrongBitOut">Error in ''{0}'': When the 'Output type' parameter is set to 'Bit', the 'M-ary number' parameter must be a real, positive, scalar integer that is a nonzero power of two.</entry>
    <entry key="varInNotRealNonNeg">Error in ''{0}'': The Variance input must be a real non-negative value.</entry>
    <entry key="sigInLenNotMult">Error in ''{0}'': The length of the signal input must be a multiple of {1, number, integer}.</entry>
    <entry key="numOutRowsNotMult">Error in ''{0}'': The number of output rows must be a multiple of {1, number, integer}.</entry>
    <entry key="outDim2NotMult">Error in ''{0}'': The second dimension of the output must be a multiple of {1, number, integer}.</entry>
    <entry key="sigInNumRowsNotMult">Error in ''{0}'': The number of input rows of the signal input must be a multiple of {1, number, integer}.</entry>
    <entry key="sigInNumColsNotMult">Error in ''{0}'': The number of columns of the signal input must be a multiple of {1, number, integer}.</entry>
    <entry key="inSigDim2NotMult">Error in ''{0}'': The second dimension of the signal input must be a multiple of {1, number, integer}.</entry>
    <entry key="inChanEstRowsNotMult">Error in ''{0}'': The number of rows of the channel estimation input must be a multiple of {1, number, integer}.</entry>
    <entry key="inChanEstDim1NotMult">Error in ''{0}'': The first dimension of the channel estimation input must be a multiple of {1, number, integer}.</entry>
    <entry key="inChanEstDim2NotMult">Error in ''{0}'': The second dimension of the channel estimation input must be a multiple of {1, number, integer}.</entry>
    <entry key="outNumColsNotMult">Error in ''{0}'': The number of output columns must be a multiple of {1, number, integer}.</entry>
    <entry key="inLenNotMultTrellisOutBits">Error in ''{0}'': The input length must be an integer multiple of the number of output bits specified in the trellis description.</entry>
    <entry key="outLenNotMultTrellisInBits">Error in ''{0}'': The output length must be an integer multiple of the number of input bits specified in the trellis description.</entry>
    <entry key="initStateNotLessThanInt">Error in ''{0}'': The value of the initial state must be a nonnegative integer less than {1, number, integer}.</entry>
    <entry key="inLenDivCodeRtWrong">Error in ''{0}'': The input length divided by the code rate (prior to puncturing) must be an integer multiple of the 'Puncture vector' parameter length. Adjust the parameter length or the code rate. The parameter length is currently {1, number, integer}, and the code rate is currently {2, number, integer}/{3, number, integer}.</entry>
    <entry key="outWdDivCodeRtWrong">Error in ''{0}'': The output length divided by the code rate (prior to decoding) must be an integer multiple of the 'Puncture vector' parameter length. Adjust the parameter length or the code rate. The parameter length is currently {1, number, integer}, and the code rate is currently {2, number, integer}/{3, number, integer}.</entry>
    <entry key="inLenNotMultChkSum">Error in ''{0}'': The input length must be an integer multiple of the 'Checksums per frame' parameter value.</entry>
    <entry key="out1LenNotMultChkSum">Error in ''{0}'': The first output length must be an integer multiple of the 'Checksums per frame' parameter value.</entry>
    <entry key="out2LenNotEquChkSum">Error in ''{0}'': The second output length must be equal to the 'Checksums per frame' parameter value.</entry>
    <entry key="outLenNotMultChkSum">Error in ''{0}'': The output length must be an integer multiple of the 'Checksums per frame' parameter.</entry>
    <entry key="inputLengthsDiffer">Error in ''{0}'': The length of all inputs must be the same.</entry>
    <entry key="inputTypesDiffer">Error in ''{0}'': All input ports must have the same data type.</entry>
    <entry key="excessiveTrellisMemory">Reported in ''{0}'': The trellis must have fewer than 2^16 states.</entry>
    <entry key="inputWidthNotN">Error in ''{0}'': Input must be a column vector of length N.</entry>
    <entry key="inputWidthNotK">Error in ''{0}'': Input must be a column vector of length K.</entry>
    <entry key="outputWidthNotN">Error in ''{0}'': Output must be a column vector of length N.</entry>
    <entry key="bitInSglRtInLenNotMultBitsSym">Error in ''{0}'': In single-rate processing mode, when the 'Input type' parameter is set to 'Bit', the input length must be an integer multiple of the number of bits per symbol. The block is in single-rate processing mode when the 'Rate options' parameter is set to 'Enforce single-rate processing' or, for frame-based inputs, is set to 'Inherit from input (this choice will be removed - see release notes)'.</entry>
    <entry key="intInMulRtInNotScl">Error in ''{0}'': In multirate processing mode, when the 'Input type' parameter is set to 'Integer', the input must be a scalar. The block is in multirate processing mode when the 'Rate options' parameter is set to 'Allow multirate processing' or, for sample-based inputs, is set to 'Inherit from input (this choice will be removed - see release notes)'.</entry>
    <entry key="bitInMulRtInLenNotBitsSym">Error in ''{0}'': In multirate processing mode, when the 'Input type' parameter is set to 'Bit', the input length must equal the number of bits per symbol. The block is in multirate processing mode when the 'Rate options' parameter is set to 'Allow multirate processing' or, for sample-based inputs, is set to 'Inherit from input (this choice will be removed - see release notes)'.</entry>
    <entry key="sglRtOutLenNotMulSampSym">Error in ''{0}'': The output length must be an integer multiple of the 'Samples per symbol' parameter when the 'Rate options' parameter is set to 'Enforce single-rate processing' or, for frame-based outputs, is set to 'Inherit from input (this choice will be removed - see release notes)'.</entry>
    <entry key="mulRtOutNotScl">Error in ''{0}'': The output must be a scalar when the 'Rate options' parameter is set to 'Allow multirate processing' or, for sample-based outputs, is set to 'Inherit from input (this choice will be removed - see release notes)'.</entry>
    <entry key="sglRtInLenNotMulSampSym">Error in ''{0}'': The input length must be a multiple of the 'Samples per symbol' parameter when the 'Rate options' parameter is set to 'Enforce single-rate processing' or, for frame-based inputs, is set to 'Inherit from input (this choice will be removed - see release notes)'.</entry>
    <entry key="mulRtInNotScl">Error in ''{0}'': The input must be a scalar when the 'Rate options' parameter is set to 'Allow multirate processing' or, for sample-based inputs, is set to 'Inherit from input (this choice will be removed - see release notes)'.</entry>
    <entry key="bitOutSglRtOutLenNotMultBitsSym">Error in ''{0}'': In single-rate processing mode, when the 'Output type' parameter is set to 'Bit', the output length must be an integer multiple of the number of bits per symbol. The block is in single-rate processing mode when the 'Rate options' parameter is set to 'Enforce single-rate processing' or, for frame-based outputs, is set to 'Inherit from input (this choice will be removed - see release notes)'.</entry>
    <entry key="intOutMulRtOutNotScl">Error in ''{0}'': In multirate processing mode, when the 'Output type' parameter is set to 'Integer', the output must be a scalar. The block is in multirate processing mode when the 'Rate options' parameter is set to 'Allow multirate processing' or, for sample-based outputs, is set to 'Inherit from input (this choice will be removed - see release notes)'.</entry>
    <entry key="bitOutMulRtOutLenNotBitsSym">Error in ''{0}'': In multirate processing mode, when the 'Output type' parameter is set to 'Bit', the output length must equal the number of bits per symbol. The block is in multirate processing mode when the 'Rate options' parameter is set to 'Allow multirate processing' or, for sample-based outputs, is set to 'Inherit from input (this choice will be removed - see release notes)'.</entry>
    <entry key="invInputdims">Error in ''{0}'': The input must be a scalar, column vector, or matrix for sample-based processing. The input must be a column vector or matrix for frame-based processing.</entry>
    <entry key="dumpOffInvOutDims">Error in ''{0}'': When the 'Output intermediate values' check box is selected, the output must be a scalar, column vector, or matrix for sample-based processing, and must be a column vector or matrix for frame-based processing.</entry>
    <entry key="parityCheckInvalid">Error in ''{0}'': Internal error: Invalid parity-check matrix specified.</entry>
    <entry key="delayedResetActionInDimNotK">Error in ''{0}'': When the 'Delay reset action to next time step' check box is selected for a rate k/n code, the input length must be k.</entry>
    <entry key="delayedResetActionOutDimNotN">Error in ''{0}'': When the 'Delay reset action to next time step' check box is selected for a rate k/n code, the output length must be n.</entry>
    <entry key="sglRtOutLenNotEven">Error in ''{0}'': In single-rate processing mode, the output must be an even length vector. The block is in single-rate processing mode when the 'Rate options' parameter is set to 'Enforce single-rate processing', or for frame-based inputs, is set to 'Inherit from input (this choice will be removed - see release notes)'.</entry>
    <entry key="bitInSglRtInLenNotEven">Error in ''{0}'': In single-rate processing mode, when the 'Input type' parameter is set to 'Bit', the input must be an even length vector. The block is in single-rate processing mode when the 'Rate options' parameter is set to 'Enforce single-rate processing' or, for frame-based inputs, is set to 'Inherit from input (this choice will be removed - see release notes)'.</entry>
    <entry key="bitInMulRtInLenNot2">Error in ''{0}'': In multirate processing mode, when the 'Input type' parameter is set to 'Bit', the input must be a column vector of length 2. The block is in multirate processing mode when the 'Rate options' parameter is set to 'Allow multirate processing', or for sample-based inputs, is set to 'Inherit from input (this choice will be removed - see release notes).'</entry>
    <entry key="outUfix1AndNumBitsNotOutWdth">Error in ''{0}'': For ufix1 output, the 'Number of bits per integer(M)' parameter must be 1.</entry>
    <entry key="seedWrongDim">Error in ''{0}'': The 'Initial seed' parameter must be a scalar or a vector with a length equal to the number of channels of the input.</entry>
    <entry key="maxOutSizeNot2ElRowVector">Error in ''{0}'': The maximum output size parameter must be a positive integer-valued two-element row vector.</entry>
    <entry key="maxOutSize2ndNot1">Error in ''{0}'': Multichannel outputs are not supported. The second element of the maximum output size parameter must be equal to 1.</entry>
    <entry key="inpSizeNotGrtMaxSize">Error in ''{0}'': The input value for the current output size cannot be greater than the first element of the maximum output size parameter.</entry>
    <entry key="currInpSize2ndNot1">Error in ''{0}'': Multichannel outputs are not supported. The second element of the input for the current output size must be equal to 1.</entry>
    <entry key="resetNotsclVarSized">Error in ''{0}'': The Reset input must be a scalar for variable-size output signals.</entry>
    <entry key="inpOSizeWrongDim">Error in ''{0}'': The current output size input must be a scalar or a two-element row vector.</entry>
    <entry key="oSizePortNotDbl">Error in ''{0}'': The current output size input must be a double-precision data type.</entry>
    <entry key="varSzNotSupErasures">Error in ''{0}'': Variable-size signals are not supported when the 'Enable erasures input port' check box is selected.</entry>
    <entry key="outputWidthNotK">Error in ''{0}'': Output must be a column vector of length K.</entry>
    <entry key="inNotFloatOrFixptForInherit">Error in ''{0}'': When you select ASIC/FPGA as the embedded hardware device and you set the 'Output data type' parameter to 'Inherit via internal rule', the block accepts a floating point input signal. When you set the 'Decision type' parameter to 'Hard decision', the block also accepts an input signal with a ufix(1) data type. When you set the 'Decision type' parameter to 'Soft decision', the block also accepts an input signal with an unsigned fixed-point data type and a word length equal to the 'Number of soft decision bits' parameter value.</entry>
    <entry key="notSameFirstDimSize">Error in ''{0}'': The first dimension for the current signal input port and channel estimation input port must be the same.</entry>
    <entry key="notSameSecondDimSize">Error in ''{0}'': The second dimension for the current signal input port and channel estimation input port must be the same.</entry>
    <entry key="delayedResetActionInDimNotN">Error in ''{0}'': When the 'Delay reset action to next time step' check box is selected for a rate K/N code,the input length must be N, and the 'Punctured code' and 'Enable erasures input port' check boxes should not be selected.</entry>
    <entry key="delayedResetActionOutDimNotK">Error in ''{0}'': When the 'Delay reset action to next time step' check box is selected for a rate K/N code,the output length must be K, and the 'Punctured code' and 'Enable erasures input port' check boxes should not be selected.</entry>
    <entry key="tracebackDepthGTOutRows">Error in ''{0}'': The sum of the 'Traceback depth' parameter and the length of 'Expected preamble' parameter must be less than or equal to the output frame length.</entry>
    <entry key="inconsistentInputWidths">Error in ''{0}'': The input dimensions must be consistent with the data in the trellis structure. The ratio of the first input port width to the second input port width must be the same as the ratio of the number of output bit streams of the decoder (k) to the number of input bit streams to the decoder (n).</entry>
    <entry key="inputInfOrNaN">Error in ''{0}'': The signal input cannot be Inf or NaN.</entry>   
    <entry key="maryNotIntPowTwo">Error in ''{0}'': The 'M-ary number' parameter must be a positive integer power of two.</entry>
    <entry key="outLenNotMult">Error in ''{0}'': The output length must be a multiple of {1, number, integer}.</entry>
    <entry key="unknownUB">Error in ''{0}'': If the signal input, X, is a column vector, the second dimension must be of fixed size.</entry>
    <entry key="commLicenseFailed">Error in ''{0}'': Unable to checkout a license for the Communications System Toolbox.</entry>
    <entry key="paramDELNIMAXNotScalar">Error in ''{0}'': Parameter DELNIMAX must be a scalar</entry>
    <entry key="wrongValOfNumOfBits">Error in ''{0}'': Value for the number of bits entering the block must be a scalar non-negative integer</entry>
    <entry key="paramErrCorrModeWrong">Error in ''{0}'': Parameter indicating the error correction mode must be a scalar non-zero, non-negative integer less than or equal to 3.</entry>
    <entry key="paramRateMatchDeMatchWrong">Error in ''{0}'': Parameter indicating the rate matching/de-matching mode must be a scalar non-negative integer.</entry>
    <entry key="insufficientMemory">Error in ''{0}'': Insufficient Memory</entry>
    <entry key="multiChannelFrameNotSupported">Error in ''{0}'': This block does not support multi-channel frame signals.Use multiple blocks to process multiple frames</entry>
    <entry key="inputFrameLengthDiffInputBits">Error in ''{0}'': The input frame length must be same as the specified number of input bits.</entry>
    <entry key="deMatchBlockinLenOutLenDiffer">Error in ''{0}'': The input frame length of rate de-matching block must be equal to the output frame length of the rate matching block.</entry>
    <entry key="inFrameLenNotMultipleOfThree">Error in ''{0}'': The input frame length must be divisible by 3 for the case of turbo coding.</entry>
    <entry key="outDimsWrong">Error in ''{0}'': Invalid dimensions for output port.</entry>
    <entry key="portSampTimeMismatch">Error in ''{0}'': Port sample times must match.</entry>
    <entry key="nooperationWTrigSampTime">Error in ''{0}'': Block does not operate with triggered sample times.</entry>
    <entry key="inputPortsDisconnected">Error in ''{0}'': Both input ports must be connected.</entry>
    <entry key="portSampleTimesMismatch">Error in ''{0}'': All port sample times must match when the Inherit Sample Time block is placed inside a triggered subsystem.</entry>
    <entry key="outputSampTimeDerivationErr">Error in ''{0}'': The Inherit Sample Time block must derive its output sample time from its reference input.</entry>
    <entry key="sampTimeInputPort2AndOutputDiffer">Error in ''{0}'': The sample time of input port 2 and the output port must be equal.</entry>
    <entry key="outputIsNot2D">Error in ''{0}'': Output must be 2-D.</entry>
    <entry key="numOutColsNotEqNumChannels">Error in ''{0}'': Number of output columns must be same as the number of channels which is the length of the gain vector parameter.</entry>
    <entry key="input2SampTimeError">Error in ''{0}'': Input 2 should inherit its sample time, or its sample time should match input 1.</entry>
    <entry key="port2NotSampleBased">Error in ''{0}'': If port 1 is sample based, port 2 must also be sample based.</entry>
    <entry key="input2ComplexityError">Error in ''{0}'': Input 2 should inherit complexity, or its complexity should match input 1</entry>
    <entry key="pworksObjPropGreaterThan100">Error in ''{0}'': Number of object properties associated with PWorks must be smaller than 100.</entry>
    <entry key="undefBlockBehaviorContinuousFrame">Error in ''{0}'': Since the Data input is a continuous-time signal, and the Reference input is a frame signal, the block behavior is undefined.</entry>
    <entry key="dataTypeMismatch">Error in ''{0}'': </entry>
    <entry key="undefBlockBehavior1DFrame">Error in ''{0}'': Since the Data input is a one-dimensional signal, and the Reference input is a scalar frame, the block behavior is undefined.</entry>
    <entry key="ctrlPortMatrixError">Error in ''{0}'': Input port 2 of this block is a [m x n] matrix signal where m,n > 1. Since the numbers of elements in the two input signals are not the same, the block behavior is undefined.</entry>
    <entry key="invalidPortDims">Error in ''{0}'': Input and output frame status or dimensions are invalid.</entry>
    <entry key="inLenNotMultBytes">Error in ''{0}'': When the 'Reflect input bytes' parameter is checked, the input length must be an integer multiple of the 'Checksums per frame' parameter value times 8.</entry>
    <entry key="out1LenNotMultBytes">Error in ''{0}'': When the 'Reflect input bytes' parameter is checked, the first output length must be an integer multiple of the 'Checksums per frame' parameter value times 8.</entry>
    <entry key="outMsgBlkLenNotMultBytesPlusDegree">Error in ''{0}'': When the 'Reflect input bytes' parameter is checked, the output message block length minus the degree of the generator polynomial must be an integer multiple of 8.</entry>
    <entry key="inMsgBlkLenNotMultBytesPlusDegree">Error in ''{0}'': When the 'Reflect input bytes' parameter is checked, the input message block length minus the degree of the generator polynomial must be an integer multiple of 8.</entry>
	<entry key="invalidPermutationVectorIndex">Error in ''{0}'': Permutation vector elements must be unique integers and between 1 and the signal width.</entry>
	<entry key="varSzNotSupPermVecFmProp">Error in ''{0}'': Variable-size signals are not supported when the permutation vector is from dialog property.</entry>
	<entry key="inputsDimsModeMismatch">Error in ''{0}'': Both inputs have to be either fixed-size or variable-size.</entry>
    <entry key="invalidInitialState">Error in ''{0}'': The initial states vector must be of length equal to the length of the scramble polynomial - 1. The elements must be integers between 0 and Calculation Base - 1.</entry>
    <entry key="invalidInitialStateValues">Error in ''{0}'': The initial state values must be integers between 0 and Calculation Base - 1.</entry>
    <entry key="invalidInitialStateLen">Error in ''{0}'': The 'Initial states' parameter must be a scalar or a vector of length equal to the length of the scramble polynomial - 1.</entry>
	<entry key="invalidScramRstPortDim">Error in ''{0}'': The reset port input must be scalar.</entry>
    <entry key="inport2Unconnected">Reported in ''{0}'': Input 2 is not connected. Input value will be set to 0.</entry>
  </message>
</rsccat>
